/// <reference path="languages.ts" />
/// <reference path="messages.ts" />
/// <reference path="tileevents.ts" />
/// <reference path="milestones.ts" />

var english = new Languages.Language("English");

// UI
english.ui(Languages.UiTranslation.Bleeding, "Bleeding");
english.ui(Languages.UiTranslation.Burning, "Burning");
english.ui(Languages.UiTranslation.DisableHints, "Disable Hints");
english.ui(Languages.UiTranslation.EnableHints, "Enable Hints");
english.ui(Languages.UiTranslation.EquipmentBack, "Back");
english.ui(Languages.UiTranslation.EquipmentBelt, "Belt");
english.ui(Languages.UiTranslation.EquipmentChest, "Chest");
english.ui(Languages.UiTranslation.EquipmentFeet, "Feet");
english.ui(Languages.UiTranslation.EquipmentHands, "Hands");
english.ui(Languages.UiTranslation.EquipmentHead, "Head");
english.ui(Languages.UiTranslation.EquipmentLeftHand, "Left Hand (Held)");
english.ui(Languages.UiTranslation.EquipmentLegs, "Legs");
english.ui(Languages.UiTranslation.EquipmentNeck, "Neck");
english.ui(Languages.UiTranslation.EquipmentRightHand, "Right Hand (Held)");
english.ui(Languages.UiTranslation.Health, "Health");
english.ui(Languages.UiTranslation.HudActions, "Actions");
english.ui(Languages.UiTranslation.HudCrafting, "Crafting");
english.ui(Languages.UiTranslation.HudEquipment, "Equipment");
english.ui(Languages.UiTranslation.HudFilter, "Filter");
english.ui(Languages.UiTranslation.HudHelp, "Help");
english.ui(Languages.UiTranslation.HudInventory, "Inventory");
english.ui(Languages.UiTranslation.HudMessages, "Messages");
english.ui(Languages.UiTranslation.HudMilestones, "Milestones");
english.ui(Languages.UiTranslation.HudOptions, "Options");
english.ui(Languages.UiTranslation.HudSave, "Save");
english.ui(Languages.UiTranslation.HudSkills, "Skills");
english.ui(Languages.UiTranslation.HudTitleScreen, "Title Screen");
english.ui(Languages.UiTranslation.Hunger, "Hunger");
english.ui(Languages.UiTranslation.MenuAbout, "About");
english.ui(Languages.UiTranslation.MenuAboutCredits, "Vaughn 'Drathy' Royko (Programming/Web/PR/Design),Gary 'Spacetech' Wilber (Programming),Frank 'Sassafrass' Sasto (Programming),Dusty 'Goaticide' Melling (Art/Design),Austin Dhillon (Music)");
english.ui(Languages.UiTranslation.MenuAboutDonators, "An extra special thank you to all the early testers, donators, and other supporters.");
english.ui(Languages.UiTranslation.MenuAboutIntro, "Wayward is a turn-based, top-down, wilderness survival roguelike currently in beta. It's brought to you by these fine folk:");
english.ui(Languages.UiTranslation.MenuAboutLibraries, "Greenworks, Electron, TypeScript, Node.js, jQuery, jQueryUI, TSM, lz-string, jQuery contextMenu, jQuery UI Touch Punch");
english.ui(Languages.UiTranslation.MenuAboutLibrariesIntro, "Wayward is made possible with the following open source projects:");
english.ui(Languages.UiTranslation.MenuAboutMessage, "Learn more about Wayward");
english.ui(Languages.UiTranslation.MenuAboutTesters, "Mackenzie 'Aarilight' McClane,Jettix,Monkeys,Krillix,money123451,Kaytavo,Zengief");
english.ui(Languages.UiTranslation.MenuAboutTestersIntro, "Testers for this release include:");
english.ui(Languages.UiTranslation.MenuAboutThanks, "Richard 'Orillian' Hobson,Vlad 'vlsd' Seghete,Unstoppable Carl Olsen,Justin 'boxofrox' Charette,Frank Orechio,Drachlen,Joshua 'jday' Day,Oddmund 'oddmunds' Strømme,codeman38");
english.ui(Languages.UiTranslation.MenuAboutThanksIntro, "With special thanks to:");
english.ui(Languages.UiTranslation.MenuDailyChallenge, "Daily Challenge");
english.ui(Languages.UiTranslation.MenuDeleteAllGameData, "Delete All Game Data");
english.ui(Languages.UiTranslation.MenuDeleteGame, "Delete Game");
english.ui(Languages.UiTranslation.MenuEditGame, "Edit Name");
english.ui(Languages.UiTranslation.MenuEndGameDead, "You Died");
english.ui(Languages.UiTranslation.MenuEndGameWon, "You Won");
english.ui(Languages.UiTranslation.MenuExportGame, "Export Game");
english.ui(Languages.UiTranslation.MenuExportSave, "Export Save");
english.ui(Languages.UiTranslation.MenuImportGame, "Import Game");
english.ui(Languages.UiTranslation.MenuImportSave, "Import Save");
english.ui(Languages.UiTranslation.MenuManageMods, "Manage Mods");
english.ui(Languages.UiTranslation.MenuManageModsInternal, "Internal Mods");
english.ui(Languages.UiTranslation.MenuManageModsLocal, "Local Mods");
english.ui(Languages.UiTranslation.MenuManageModsMessage, "Open Steam Workshop to install mods");
english.ui(Languages.UiTranslation.MenuManageModsPublishMod, "Publish Mod");
english.ui(Languages.UiTranslation.MenuManageModsUninstallMod, "Uninstall Mod");
english.ui(Languages.UiTranslation.MenuModdingGuide, "Modding Guide");
english.ui(Languages.UiTranslation.MenuManageModsViewInSteamWorkshop, "View Steam Workshop Page");
english.ui(Languages.UiTranslation.MenuManageModsWorkshop, "Workshop Mods");
english.ui(Languages.UiTranslation.MenuNoHighscores, "No highscores");
english.ui(Languages.UiTranslation.MenuNoMods, "You have no mods installed");
english.ui(Languages.UiTranslation.MenuOpenLogsFolder, "Open Logs Folder");
english.ui(Languages.UiTranslation.MenuOpenModFolder, "Open Mod Folder");
english.ui(Languages.UiTranslation.MenuOptions, "Options");
english.ui(Languages.UiTranslation.MenuOptionsMessage, "Change your game settings");
english.ui(Languages.UiTranslation.MenuPlayGame, "Play Game");
english.ui(Languages.UiTranslation.MenuPlayGameMessage, "Continue or Create New");
english.ui(Languages.UiTranslation.MenuPlayGameNewGame, "New Game");
english.ui(Languages.UiTranslation.MenuPostATweet, "Share On Twitter");
english.ui(Languages.UiTranslation.MenuToggleDeveloperTools, "Toggle Developer Tools");
english.ui(Languages.UiTranslation.MenuReloadGame, "Reload Game");
english.ui(Languages.UiTranslation.MenuQuitGame, "Quit Game");
english.ui(Languages.UiTranslation.MenuShareOnFacebook, "Share On Facebook");
english.ui(Languages.UiTranslation.MenuViewHighscores, "View Highscores");
english.ui(Languages.UiTranslation.MenuViewHighscoresMessage, "Previous Deaths in Game");
english.ui(Languages.UiTranslation.MenuVisitSteamWorkshop, "Visit Steam Workshop");
english.ui(Languages.UiTranslation.NextHint, "Next Hint");
english.ui(Languages.UiTranslation.OptionsAlternateFont, "Alternate Font");
english.ui(Languages.UiTranslation.OptionsAudio, "Audio");
english.ui(Languages.UiTranslation.OptionsAudio, "Audio");
english.ui(Languages.UiTranslation.OptionsAutoGather, "Auto Gather");
english.ui(Languages.UiTranslation.OptionsAutoPickup, "Auto Pick-up");
english.ui(Languages.UiTranslation.OptionsDeveloper, "Developer");
english.ui(Languages.UiTranslation.OptionsDropOnGather, "Drop On Gather");
english.ui(Languages.UiTranslation.OptionsEffects, "Effects");
english.ui(Languages.UiTranslation.OptionsEnableHints, "Enable Hints");
english.ui(Languages.UiTranslation.OptionsFullscreenMode, "Fullscreen Mode");
english.ui(Languages.UiTranslation.OptionsGame, "Game");
english.ui(Languages.UiTranslation.OptionsGraphics, "Graphics");
english.ui(Languages.UiTranslation.OptionsKeyBindDefault, "Default");
english.ui(Languages.UiTranslation.OptionsKeyBindRebinding, "Press any key...");
english.ui(Languages.UiTranslation.OptionsKeyBinds, "Key Binds");
english.ui(Languages.UiTranslation.OptionsLanguage, "Language");
english.ui(Languages.UiTranslation.OptionsMusic, "Music");
english.ui(Languages.UiTranslation.OptionsMute, "Mute");
english.ui(Languages.UiTranslation.OptionsNextSong, "Next");
english.ui(Languages.UiTranslation.OptionsPixelFont, "Pixel Font");
english.ui(Languages.UiTranslation.OptionsSaveData, "Save Data");
english.ui(Languages.UiTranslation.OptionsScaleIn, "Scale In +");
english.ui(Languages.UiTranslation.OptionsScaleOut, "Scale Out -");
english.ui(Languages.UiTranslation.OptionsVisionDither, "Dither Vision");
english.ui(Languages.UiTranslation.OptionsVisionFade, "Fade Vision");
english.ui(Languages.UiTranslation.OptionsWindowedMode, "Windowed Mode");
english.ui(Languages.UiTranslation.OptionsZoomIn, "Zoom In +");
english.ui(Languages.UiTranslation.OptionsZoomOut, "Zoom Out -");
english.ui(Languages.UiTranslation.Poisoned, "Poisoned");
english.ui(Languages.UiTranslation.PreviousHint, "Previous Hint");
english.ui(Languages.UiTranslation.QuickSlot1, "1");
english.ui(Languages.UiTranslation.QuickSlot2, "2");
english.ui(Languages.UiTranslation.QuickSlot3, "3");
english.ui(Languages.UiTranslation.QuickSlot4, "4");
english.ui(Languages.UiTranslation.QuickSlot5, "5");
english.ui(Languages.UiTranslation.QuickSlot6, "6");
english.ui(Languages.UiTranslation.QuickSlot7, "7");
english.ui(Languages.UiTranslation.QuickSlot8, "8");
english.ui(Languages.UiTranslation.QuickSlot9, "9");
english.ui(Languages.UiTranslation.ReturnToTitleScreen, "Return to Title Screen");
english.ui(Languages.UiTranslation.Stamina, "Stamina");
english.ui(Languages.UiTranslation.Talent, "Talent");
english.ui(Languages.UiTranslation.Thirst, "Thirst");
english.ui(Languages.UiTranslation.Version, `Wayward Beta ${gameVersion}`);
english.ui(Languages.UiTranslation.Weight, "Weight");
english.ui(Languages.UiTranslation.WindowTitleContainer, "Container");
english.ui(Languages.UiTranslation.WindowTitleCrafting, "Crafting");
english.ui(Languages.UiTranslation.WindowTitleEquipment, "Equipment");
english.ui(Languages.UiTranslation.WindowTitleHighscores, "Highscores");
english.ui(Languages.UiTranslation.WindowTitleInventory, "Inventory");
english.ui(Languages.UiTranslation.WindowTitleMap, "Map");
english.ui(Languages.UiTranslation.WindowTitleMessages, "Messages");
english.ui(Languages.UiTranslation.WindowTitleMilestones, "Milestones");
english.ui(Languages.UiTranslation.WindowTitleOptions, "Options");
english.ui(Languages.UiTranslation.WindowTitleSkills, "Skills");

// Messages
// NOTE: Style guide
// No contractions for in-game messages (other UI/dialogs can use them)
// Past tense for all messages that appear when/during taking a turn
// Present tense for all messages that appear when no turn is passed
// For the style guide of the enum names, check enums.ts
english.message(Message.AberrantCreatureDroppedItem, "Mysteriously, the aberrant creature dropped _0_.");
english.message(Message.AboutHours, "It appeared you have _0_ for about _1_ _2_.");
english.message(Message.AddedFuelToFire, "You added the fuel to the fire! The fire grows stronger.");
english.message(Message.AddedFuelToTorch, "You added the fuel to the torch.");
english.message(Message.AddFuel, "Add Fuel");
english.message(Message.AddToQuickslot, "Add to Quickslot");
english.message(Message.Advanced, "Advanced");
english.message(Message.AllSavedContentRemoved, "All saved content removed.");
english.message(Message.AlreadyFullyRepaired, "_0_ is already fully repaired.");
english.message(Message.AlreadyWaterInStill, "There is already water in this still!");
english.message(Message.AppearsToBeDawn, "It appears to be dawn.");
english.message(Message.AppearsToBeDusk, "It appears to be dusk.");
english.message(Message.AppearsToBeMidDay, "It appears to be mid day.");
english.message(Message.AppearsToBeNight, "It appears to be night.");
english.message(Message.AreYouSureYouWantToSail, "Are you sure you want to sail to civilization? Your journey will be over, but you can always return back to these lands.");
english.message(Message.ArmorAppearedResistant, "Your armor appeared to be resistant to the attack.");
english.message(Message.ArmorAppearedVulnerable, "Your armor appeared to be vulnerable to the attack.");
english.message(Message.ArmorProtectedFromInjuryAgainst, "Your armor protected you from injury against the _0_.");
english.message(Message.Attack, "Attack");
english.message(Message.AttemptedToDropAllIntoFire, "You attempted to drop all of _0_ into the fire.");
english.message(Message.AttemptToPlaceAllOnGround, "You attempted to place all of _0_ on the ground.");
english.message(Message.AutomaticallySavingGame, "Automatically saving your game...");
english.message(Message.AwakeToFindYourself, "You awake to find yourself no longer in the company of good men or a fine seafaring vessel. Instead you discover yourself in tattered clothing, with a pocket full of shoddy items. Treasure... you remember something about treasure.");
english.message(Message.Back, "Back");
english.message(Message.BadlyBurnedLostHealth, "You have been badly burned! You have lost _0_ health!");
english.message(Message.BecomingMoreAgile, "You felt yourself becoming more agile!");
english.message(Message.BeginSleeping, "You begin sleeping...");
english.message(Message.BeginUsingRaft, "You begin using a raft.");
english.message(Message.Belt, "Belt");
english.message(Message.BleedingHasStopped, "The bleeding has stopped!");
english.message(Message.BleedingProfusely, "You start bleeding profusely!");
english.message(Message.BleedingToDeathLostHealth, "You are bleeding to death! You have lost _0_ health!");
english.message(Message.Blunt, "Blunt");
english.message(Message.BrokeIntoPieces, "_0_ could no longer be repaired and broke into pieces.");
english.message(Message.BrokenOnImpact, "_0_ has broken on impact!");
english.message(Message.BrokenWhileFiring, "_0_ has broken while firing!");
english.message(Message.Build, "build");
english.message(Message.BurningToDeath, "burning to death");
english.message(Message.By, "by ");
english.message(Message.ByBleedingOut, "by bleeding out");
english.message(Message.ByEatingSomethingBad, "by eating something bad for you");
english.message(Message.ByPoisoning, "by poisoning");
english.message(Message.BySteppingOnA, "by stepping on a ");
english.message(Message.BySteppingOnTrap, "by stepping on a trap");
english.message(Message.ByWorkingYourselfIntoExhaustion, "by working yourself into exhaustion");
english.message(Message.Cancel, "Cancel");
english.message(Message.CannotBePreserved, "This item cannot be preserved.");
english.message(Message.CannotBeReinforced, "_0_ cannot be reinforced.");
english.message(Message.CannotBeRepaired, "_0_ cannot be repaired.");
english.message(Message.CannotBeTransmogrified, "_0_ cannot be transmogrified.");
english.message(Message.CannotBuildHere, "You cannot build _0_ here!");
english.message(Message.CannotCraftHere, "You cannot craft here.");
english.message(Message.CannotDigHere, "You cannot dig here!");
english.message(Message.CannotDropHere, "You cannot drop _0_ here!");
english.message(Message.CannotEquipThatThere, "You cannot equip that there!");
english.message(Message.CannotFishFor, "You cannot fish for _0_.");
english.message(Message.CannotGatherFromWhileOnFire, "You cannot gather from that while it is on fire!");
english.message(Message.CannotGatherHere, "You cannot gather anything here.");
english.message(Message.CannotImproveGrowingSpeed, "You cannot improve the growing speed of this plant any further.");
english.message(Message.CannotPickupWhenFull, "You cannot pick this up while it is full of water.");
english.message(Message.CannotPickUpWhileLit, "You cannot pick this up while it is lit.");
english.message(Message.CannotPickUpWithItemsInside, "You cannot pick this up with items inside!");
english.message(Message.CannotPlaceContainerInItself, "You cannot place a container inside itself.");
english.message(Message.CannotPlaceHere, "You cannot place a _0_ here!");
english.message(Message.CannotPlaceThatFromHere, "You cannot place that from here.");
english.message(Message.CannotPlaceThatHere, "You cannot place that here.");
english.message(Message.CannotPlantHere, "You cannot plant a _0_ here!");
english.message(Message.CannotRestHere, "You cannot rest here.");
english.message(Message.CannotSeeHere, "You cannot see anything here.");
english.message(Message.CannotSleepHere, "You cannot sleep here.");
english.message(Message.CannotStartFireHere, "You cannot start a fire here!");
english.message(Message.CannotToTellTime, "You cannot tell time from here!");
english.message(Message.CarryingTooMuchWeight, "You are carrying too much weight!");
english.message(Message.CarvedUpCorpse, "You carved and hacked up the corpse.");
english.message(Message.CastYourLine, "You cast your line out _0_ spaces.");
english.message(Message.Category, "Category");
english.message(Message.CaughtFish, "You caught a _0_!");
english.message(Message.Chest, "Chest");
english.message(Message.ClearMessages, "Clear Messages");
english.message(Message.CloseDoor, "Close Door");
english.message(Message.Consumed, "Consumed");
english.message(Message.Container, "Container");
english.message(Message.Cook, "cook");
english.message(Message.Cooked, "cooked");
english.message(Message.Corpse, "Corpse");
english.message(Message.CorruptSaveDetected, "Corrupt save detected. Please delete this save.");
english.message(Message.CouldNotDecipher, "You could not decipher the map.");
english.message(Message.Craft, "craft");
english.message(Message.Crafted, "crafted");
english.message(Message.Crafts, "Crafts");
english.message(Message.CreatureAppears, "_0_ appears!");
english.message(Message.CreatureAppearsHealthy, "The creature appears to be healthy.");
english.message(Message.CreatureAppearsUnhealthy, "The creature appears to be unhealthy.");
english.message(Message.CreatureIsAtPercentHealth, "The creature is at _0_% health.");
english.message(Message.CreatureLooksBarelyHurt, "The creature looks barely hurt.");
english.message(Message.CreatureLooksHealthyAndUndamaged, "The creature looks healthy and fairly undamaged.");
english.message(Message.CreatureLooksInjured, "The creature looks injured.");
english.message(Message.CreatureLooksSeverelyDamaged, "The creature looks severely damaged.");
english.message(Message.CreatureSeemsHurt, "The creature seems hurt.");
english.message(Message.CreatureSeemsInjured, "The creature seems very injured.");
english.message(Message.CreatureSeemsUnimpaired, "The creature seems unimpaired.");
english.message(Message.CuredYourPoison, "You have cured your poison!");
english.message(Message.DailyChallengeMode, "Daily Challenge Mode");
english.message(Message.DamageAppearedEffective, "_0_ damage appeared to be effective.");
english.message(Message.DamageAppearedIneffective, "_0_ damage appeared to be ineffective.");
english.message(Message.DamagedByPouringWater, "You damaged _0_ by pouring out the water.");
english.message(Message.DealtNoDamageToYou, "_0_ has dealt no damage to you.");
english.message(Message.DefaultGameName, "Untitled Save _0_");
english.message(Message.DependencyIssue, "Dependency issue.");
english.message(Message.DestroyedFromUse, "_0_ has been destroyed from use.");
english.message(Message.DestroyedGrowingByPickingItUp, "You destroyed the growing _0_ by trying to pick it up!");
english.message(Message.DidNotSeemToBeHurting, "_0_ did not seem to be hurting _1_.");
english.message(Message.Disassemble, "Disassemble");
english.message(Message.DiscoveredCaveEntrance, "You have discovered a cave entrance!");
english.message(Message.DiscoveredInTheBottle, "You have discovered _0_ in the bottle!");
english.message(Message.DoNotForgetToAddRequiredModsOnWorkshop, "Don't forget to add the required mods on the Steam Workshop page!");
english.message(Message.DoNotHaveTreasureMaps, "You do not have any treasure maps!");
english.message(Message.DrewSurroundings, "You drew your surroundings.");
english.message(Message.Drink, "Drink");
english.message(Message.Drop, "Drop");
english.message(Message.DropAll, "Drop All");
english.message(Message.DropAllOfSameQuality, "Drop All of the Same Quality");
english.message(Message.DroppedAllIntoDepths, "You dropped all of _0_ into the depths below.");
english.message(Message.DroppedIntoDepths, "You dropped _0_ into the depths below.");
english.message(Message.DroppedIntoFire, "You dropped _0_ into the fire.");
english.message(Message.DueToDehydration, "due to dehydration");
english.message(Message.DueToStarvation, "due to starvation");
english.message(Message.DugTreasureOut, "You dug the treasure out.");
english.message(Message.DumpContentsOfContainerInInventory, "You dump the contents of the container into your inventory!");
english.message(Message.DyingOfDehydration, "You are dying of dehydration!");
english.message(Message.EarnedMilestone, "You have earned the milestone, _0_! _1_");
english.message(Message.EquipmentProtectedYouFromHeat, "The flames engulf you, but your equipment protected you from the heat.");
english.message(Message.EquipTo, "Equip to ");
english.message(Message.ErrorHasOccured, "An error has occurred!");
english.message(Message.Expert, "Expert");
english.message(Message.ExtinguishedFire, "You extinguished the fire.");
english.message(Message.ExtinguishedTorch, "You extinguished the torch.");
english.message(Message.FailedToAddFuelToTorch, "You failed to add the fuel to the torch properly.");
english.message(Message.FailedToCatchFish, "You failed to catch the fish!");
english.message(Message.FailedToCauseDamage, "You failed to cause any damage to _0_ with _1_! _2_");
english.message(Message.FailedToDrawMap, "You failed to draw the map.");
english.message(Message.FailedToPickLock, "You failed to pick the lock.");
english.message(Message.FailedToPlant, "You failed to plant _0_ in the ground.");
english.message(Message.FailedToPreserve, "You failed to preserve the food.");
english.message(Message.FailedToReinforce, "You failed to reinforce _0_.");
english.message(Message.FailedToRepair, "You failed to repair _0_.");
english.message(Message.FailedToStartFire, "You failed to start a fire!");
english.message(Message.FailedToTransmogrify, "You failed to transmogrify _0_.");
english.message(Message.FarAwayFromTreasure, "You are far away from the treasure.");
english.message(Message.Feet, "Feet");
english.message(Message.FeltBurningPainLostHealth, "You felt burning pain! You have lost _0_ health!");
english.message(Message.FewMinutes, "It appeared you _0_ for a few minutes.");
english.message(Message.Filled, "You filled _0_.");
english.message(Message.FilledFrom, "You filled _0_ from _1_.");
english.message(Message.FinalizingWorld, "Finalizing World");
english.message(Message.Fire, "Fire");
english.message(Message.FireAlmostExtinguished, "The fire is almost extinguished.");
english.message(Message.FiredIntoObstacle, "You fired _0_ into an obstacle.");
english.message(Message.FireFacingYouIsWarm, "The fire facing you is warm and comforting.");
english.message(Message.FireIsHealthy, "The fire is very healthy.");
english.message(Message.FireIsRaging, "The fire is raging!");
english.message(Message.FireIsStruggling, "The fire is struggling.");
english.message(Message.FireSource, "A Fire Source");
english.message(Message.FirstQuarterOfDay, "It is currently in the first quarter of the day.");
english.message(Message.FirstQuarterOfNight, "It is currently in the first quarter of the night.");
english.message(Message.Food, "food");
english.message(Message.FoodAlreadyPreserved, "This food is already well preserved.");
english.message(Message.FourthQuarterOfDay, "It is currently in the fourth quarter of the day.");
english.message(Message.FourthQuarterOfNight, "It is currently in the fourth quarter of the night.");
english.message(Message.FullyDecodedMap, "You fully decoded the map!");
english.message(Message.GainedHealth, "You have gained _0_ health.");
english.message(Message.GainedHunger, "You have gained _0_ hunger.");
english.message(Message.GainedStamina, "You have gained _0_ stamina.");
english.message(Message.GainedThirst, "You have gained _0_ thirst.");
english.message(Message.GameHasBeenSavedIsTakingUpMB, "Your game has been saved! Your game save is taking up _0_MB.");
english.message(Message.Gather, "Gather");
english.message(Message.GeneratingWorld, "Generating World");
english.message(Message.GettingStronger, "You felt yourself getting stronger!");
english.message(Message.GrabAll, "Grab All");
english.message(Message.Group, "Group");
english.message(Message.Hands, "Hands");
english.message(Message.HasBeenHurtByATrap, "_0_ has been hurt by a trap!");
english.message(Message.HasBeenHurtByYourTrap, "_0_ has been hurt by your trap!");
english.message(Message.HasDecayed, "Your _0_ has decayed.");
english.message(Message.HasHitYouForDamage, "_0_ has hit you for _1_ damage! _2_");
english.message(Message.HasSplit, "_0_ has split.");
english.message(Message.Head, "Head");
english.message(Message.Held, "Held");
english.message(Message.Help, "Help");
english.message(Message.Hints, "Hints");
english.message(Message.HintsDisabled, "Hints disabled.");
english.message(Message.HintsEnabled, "Hints enabled.");
english.message(Message.HitForDamage, "You hit _0_ for _1_ damage with _2_! _3_");
english.message(Message.Hour, "hour");
english.message(Message.Hours, "hours");
english.message(Message.HowDoYouWantToExportSave, "How do you want to export this save?");
english.message(Message.HurtHandsByGatheringWithNoTool, "You hurt your hands by gathering with no tool.");
english.message(Message.HurtHandsHittingWithoutWeapons, "You hurt your hands hitting _0_ without any weapons!");
english.message(Message.IncompatibleVersion, "This mod is not compatible with this version of Wayward.");
english.message(Message.InExactLocationOfTreasure, "You are in the exact location of where the treasure is buried.");
english.message(Message.InjuredFromTrap, "You have been injured from a trap!");
english.message(Message.InNeedOfRepair, "_0_ is in need of repair.");
english.message(Message.Inspect, "Inspect");
english.message(Message.Intermediate, "Intermediate");
english.message(Message.Inventory, "Inventory");
english.message(Message.Jump, "Jump");
english.message(Message.Killed, "Killed _0_!");
english.message(Message.LabelAttackFromTactics, "Attack From Tactics:");
english.message(Message.LabelAuthor, "Author: ");
english.message(Message.LabelBase, "Base: ");
english.message(Message.LabelBaseAttack, "Base Attack:");
english.message(Message.LabelBaseDefense, "Base Defense:");
english.message(Message.LabelBluntResist, "Blunt Resist:");
english.message(Message.LabelDecay, "Decay: ");
english.message(Message.LabelDefense, "Defense:");
english.message(Message.LabelDefenseFromParrying, "Defense From Parrying:");
english.message(Message.LabelDoodadRequired, "Doodad Required: ");
english.message(Message.LabelDurability, "Durability: ");
english.message(Message.LabelEquip, "Equip:");
english.message(Message.LabelFireResist, "Fire Resist:");
english.message(Message.LabelGrouping, "Grouping: ");
english.message(Message.LabelHave, "Have: ");
english.message(Message.LabelLastUpdated, "Last Updated: ");
english.message(Message.LabelLeftHandAttack, "Left Hand Attack:");
english.message(Message.LabelLevel, "Level: ");
english.message(Message.LabelMaximumWeight, "Maximum Weight: ");
english.message(Message.LabelOnEquip, "On Equip: ");
english.message(Message.LabelPiercingResist, "Piercing Resist:");
english.message(Message.LabelRange, "Range: ");
english.message(Message.LabelRanged, "Ranged: ");
english.message(Message.LabelRangedAttack, "Ranged Attack: ");
english.message(Message.LabelRangedDamage, "Ranged Damage:");
english.message(Message.LabelRequiredMods, "Required Mods: ");
english.message(Message.LabelRequires, "Requires: ");
english.message(Message.LabelResists, "Resists: ");
english.message(Message.LabelRightHandAttack, "Right Hand Attack:");
english.message(Message.LabelSkill, "Skill: ");
english.message(Message.LabelSlashingResist, "Slashing Resist:");
english.message(Message.LabelUse, "Use:");
english.message(Message.LabelUses, "Uses:");
english.message(Message.LabelVersion, "Version: ");
english.message(Message.LabelVulnerabilities, "Vulnerabilities: ");
english.message(Message.LabelWeight, "Weight: ");
english.message(Message.LabelWeightReduction, "Weight Reduction: ");
english.message(Message.LastPlaceYouLeftOff, "You awake to discover yourself in the last place you left off...");
english.message(Message.LearnedHowToCreate, "You have learned how to create _0_!");
english.message(Message.LeftHand, "Left Hand (Held)");
english.message(Message.Legs, "Legs");
english.message(Message.LoadingMods, "Loading Mods");
english.message(Message.LoadingSprites, "Loading Sprites");
english.message(Message.LoadingWorld, "Loading World");
english.message(Message.LocalFile, "Local File");
english.message(Message.LocalVersionOfModDetected, "A local version of this mod has been detected. The Workshop version will not load.");
english.message(Message.LoseBonesLayBleaching, "Your bones lay bleaching, lost to time.");
english.message(Message.LoseEndIsBeginning, "The end is just the beginning.");
english.message(Message.LoseSadlyNoTrace, "Sadly, no trace of you was ever found.");
english.message(Message.LostHealth, "You have lost _0_ health.");
english.message(Message.LostHunger, "You have lost _0_ hunger.");
english.message(Message.LostStamina, "You have lost _0_ stamina.");
english.message(Message.LostThirst, "You have lost _0_ thirst.");
english.message(Message.MaterialsDestroyed, "Some materials have been destroyed on disassembly.");
english.message(Message.MapNotOfThisArea, "This map is not of this area.");
english.message(Message.MetabolismSlowed, "Your metabolism has slowed!");
english.message(Message.MilestoneIsHidden, "This milestone is hidden.");
english.message(Message.MilestoneIsInvisible, "This milestone is invisible.");
english.message(Message.MissedWith, "You missed _0_ with _1_!");
english.message(Message.MissingRequiredMods, "You are missing one or more required mods.");
english.message(Message.ModImportedSaveGame, "A mod has imported a saved game.");
english.message(Message.ModLoadError, "Error loading mod. One or more files may be corrupt.");
english.message(Message.ModRequiresItself, "This mod requires itself.");
english.message(Message.ModWithNameAlreadyExists, "A mod with that name already exists. Try changing the name of the slot.");
english.message(Message.MonsterIdolAttractedCreature, "The monster idol attracted another creature.");
english.message(Message.MoveAllOfSameQualityToInventory, "Move All of Same Quality to Inventory");
english.message(Message.MoveAllOfSameQualityToOpenedContainer, "Move All of Same Quality to Opened Container");
english.message(Message.MoveAllToInventory, "Move All to Inventory");
english.message(Message.MoveAllToOpenedContainer, "Move All to Opened Container");
english.message(Message.MoveOverTrapButDoNotSetOff, "You move over the trap, but do not set it off.");
english.message(Message.MoveToInventory, "Move to Inventory");
english.message(Message.MoveToOpenedContainer, "Move to Opened Container");
english.message(Message.MustCastIntoWater, "You must cast this into water to catch anything.");
english.message(Message.Mysteriously, "mysteriously");
english.message(Message.Name, "Name");
english.message(Message.Neck, "Neck");
english.message(Message.NeedAShovelToDigTreasure, "You need a shovel to be able to dig up this treasure.");
english.message(Message.NeedDeeperWaterForRaft, "You need to be in deeper water to use a raft.");
english.message(Message.NeedFishingNetForTreasure, "You need a fishing net to be able to get this treasure.");
english.message(Message.NeedToBuildUpLandAround, "You need to build up the land around this water before placing this here.");
english.message(Message.NeedToEquipToShoot, "You need to equip this to shoot from it!");
english.message(Message.NeedToStartTravelsOutside, "You need to start your travels outside.");
english.message(Message.Newest, "Newest");
english.message(Message.No, "No");
english.message(Message.NoAmmunitionForThatWeapon, "You do not have any ammunition for that weapon in your inventory!");
english.message(Message.NoBlackPowderToFireWeapon, "You do not have any Black Powder to fire this weapon.");
english.message(Message.NoFireToStokeWith, "There is no fire to stoke with _0_ here!");
english.message(Message.NoFishAtLocation, "There is no fish at this location!");
english.message(Message.NoFuelItemsToStartFire, "You do not have any fuel to start the fire.");
english.message(Message.NoInkToDrawMap, "You do not have any ink to draw a map with!");
english.message(Message.NoKindlingToStartFire, "You do not have any Kindling to start the fire.");
english.message(Message.NoLongerFeelPainOfBurning, "You no longer feel the pain of burning!");
english.message(Message.NoMoreRoomInContainer, "There is no more room in this container for that item.");
english.message(Message.NoRoomToDrop, "There is no room to drop that here!");
english.message(Message.NotAvailable, "N/A");
english.message(Message.NotEnoughFoodToTravel, "You do not have enough _0_ to attempt a long travel!");
english.message(Message.NotEnoughPurifiedWaterYet, "There is not enough purified water available in the still yet.");
english.message(Message.NotEnoughStrengthToThrow, "You do not have enough strength to throw this!");
english.message(Message.NotEnoughTreasureToReturn, "You do not have enough treasure to return to civilization.");
english.message(Message.NotFacingLockedObject, "You are not facing a locked object.");
english.message(Message.NotFacingValidFoodForPreservation, "You are not facing a valid food item for preservation.");
english.message(Message.NotFacingValidItemForReinforcement, "You are not facing a valid item for reinforcement.");
english.message(Message.NotFacingValidItemForRepair, "You are not facing a valid item for repair.");
english.message(Message.NotFacingValidItemToTransmogrify, "You are not facing a valid item to transmogrify.");
english.message(Message.NothingHereToCarve, "There is nothing here to carve!");
english.message(Message.NothingHereToFill, "There is nothing here to fill _0_.");
english.message(Message.NothingHereToGardenWith, "There is nothing here to garden with _0_ here!");
english.message(Message.NoTinderToStartFire, "You do not have any Tinder to start the fire.");
english.message(Message.NotInRangeOfTreasure, "You are not in the range of any buried treasure!");
english.message(Message.NoWaterInStill, "There is no water in this still.");
english.message(Message.NoWhereNearTreasure, "You are no where near the treasure.");
english.message(Message.NumberEight, "eight");
english.message(Message.NumberFive, "five");
english.message(Message.NumberFour, "four");
english.message(Message.NumberNine, "nine");
english.message(Message.NumberOne, "one");
english.message(Message.NumberSeven, "seven");
english.message(Message.NumberSix, "six");
english.message(Message.NumberTen, "ten");
english.message(Message.NumberThree, "three");
english.message(Message.NumberTwo, "two");
english.message(Message.ObjectIsLocked, "This object is locked.");
english.message(Message.Ok, "OK");
english.message(Message.Oldest, "Oldest");
english.message(Message.OpenDoor, "Open Door");
english.message(Message.OverEatingLostStamina, "You are over-eating! You have lost 10 stamina.");
english.message(Message.OverHydratingLostStamina, "You are over-hydrating! You have lost 10 stamina.");
english.message(Message.PaperTurnedToMush, "The wet piece of paper turned to mush as it was released from the bottle.");
english.message(Message.PartiallyDecodedMap, "You partially decoded the map.");
english.message(Message.PastExperiencesProvideBenefits, "Your past experiences provide you benefits for survival.");
english.message(Message.PickupItem, "Pick-up Item");
english.message(Message.PickupObject, "Pick-up Object");
english.message(Message.Piercing, "Piercing");
english.message(Message.Place, "place");
english.message(Message.PlacedOnGround, "You placed _0_ on the ground!");
english.message(Message.Plant, "plant");
english.message(Message.PlantedInGround, "You planted _0_ in the ground.");
english.message(Message.PlantIsFertile, "The plant is fertile.");
english.message(Message.PlantIsNotFertile, "The plant is not fertile.");
english.message(Message.PlantVeryHealthy, "The plant is very healthy and fertile.");
english.message(Message.Poisoned, "You have been poisoned!");
english.message(Message.PoisonedLostHealth, "You are poisoned! You have lost _0_ health!");
english.message(Message.PoisonWorkedItsCourse, "The poison has worked its course!");
english.message(Message.PouredOutWater, "You poured out the water.");
english.message(Message.PouredWaterIntoStill, "You poured the water into the still.");
english.message(Message.PreservedFood, "You preserved the food.");
english.message(Message.PublishingMod, "Publishing Mod");
english.message(Message.PurifiedWaterInStill, "There is purified water in the still.");
english.message(Message.RefreshingMods, "Refreshing Mods");
english.message(Message.Reinforce, "You reinforce _0_.");
english.message(Message.RemovedBlood, "You removed the blood.");
english.message(Message.RemoveFromQuickslot, "Remove from Quickslot");
english.message(Message.Repair, "You repair _0_.");
english.message(Message.RequiredModsMissingWantToContinue, "One or more required mods are missing. Unexpected results may occur. Are you sure you want to continue?");
english.message(Message.RequiredModsNotLoaded, "One or more required mods are not loaded.");
english.message(Message.RequiresFacingFireSource, "This item requires you to be facing a fire source in order to light it.");
english.message(Message.RequiresFireToBeLit, "This still requires a fire to be lit underneath it to begin purifying water.");
english.message(Message.RequiresYouToBeFacingToCraft, "This item requires you to be facing _0_ in order to craft it.");
english.message(Message.Rest, "Rest");
english.message(Message.Rested, "rested");
english.message(Message.Resting, "Resting");
english.message(Message.RestInterrupted, "Your rest has been interrupted!");
english.message(Message.ReturnedToCivilization, "Returned to civilization!");
english.message(Message.ReturningToCivilizationSetOffAgain, "After returning the treasure back to civilization, you set off again...");
english.message(Message.ReturnToTitleScreenNoSaveInDailyChallenge, "Are you sure you want to return to the title screen?<br />Note: Your progress is not saved in Daily Challenge Mode.");
english.message(Message.ReturnToTitleScreenProgressWillBeSaved, "Are you sure you want to return to the title screen?<br />Note: Your progress will be saved automatically.");
english.message(Message.RightHand, "Right Hand (Held)");
english.message(Message.SailedToCivilization, "You sailed to civilization in this game.");
english.message(Message.SavingGame, "Saving Game");
english.message(Message.ScrollProvidedNoUsefulInsight, "You are truly a master of the crafts. The scroll provided no useful insight for you.");
english.message(Message.SeaweedFromWater, "You dragged a slimy mass of seaweed up out of the water!");
english.message(Message.SecondQuarterOfDay, "It is currently in the second quarter of the day.");
english.message(Message.SecondQuarterOfNight, "It is currently in the second quarter of the night.");
english.message(Message.SeeGrowing, "You see growing _0_.");
english.message(Message.SeemsToHaveDrawnEnergy, "_0_ seems to have drawn energy from _1_!");
english.message(Message.SetTrapOffButNoDamage, "You set the trap off, but it does no damage to you.");
english.message(Message.SetUp, "You have set up _0_.");
english.message(Message.ShadowInTheWater, "You have seen a shadow in the water.");
english.message(Message.Simple, "Simple");
english.message(Message.Skill, "Skill");
english.message(Message.SkillHasRaised, "Your skill in _0_ has raised to _1_%!");
english.message(Message.Slashing, "Slashing");
english.message(Message.Sleeping, "Sleeping");
english.message(Message.SleepInterrupted, "Your sleep has been interrupted!");
english.message(Message.Slept, "slept");
english.message(Message.SoilWouldHaveNoEffect, "The soil would have no effect on this plant.");
english.message(Message.SomethingInTheWayOfCarving, "There is something in the way of your carving!");
english.message(Message.SomethingInTheWayOfDigging, "There is something in the way of your digging!");
english.message(Message.SomethingInTheWayOfDiggingCarveFirst, "There is something in the way of your digging. This must be carved first.");
english.message(Message.SomethingInTheWayOfFishing, "There is something in the way. You cannot fish past that!");
english.message(Message.SomethingInTheWayOfPlacing, "There is something in the way of placing this.");
english.message(Message.SoothedYourBurningPain, "You have soothed your burning pain!");
english.message(Message.Sort, "Sort");
english.message(Message.SortedByCategory, "_0_ sorted by category.");
english.message(Message.SortedByGroup, "_0_ sorted by group.");
english.message(Message.SortedByName, "_0_ sorted by name.");
english.message(Message.SortedByNewest, "_0_ sorted by newest.");
english.message(Message.SortedByOldest, "_0_ sorted by oldest.");
english.message(Message.SortedBySkill, "_0_ sorted by skill.");
english.message(Message.SortedByWeight, "_0_ sorted by weight.");
english.message(Message.StaminaIsFull, "Your stamina is full, you do not need to rest any more.");
english.message(Message.StartedFire, "You have started a fire!");
english.message(Message.StartTravelInWater, "You need to start your travels while in ocean water.");
english.message(Message.StarvingToDeath, "You are starving to death!");
english.message(Message.SteamWorkshop, "Steam Workshop");
english.message(Message.SteppingOnHasInjuredYouForDamage, "Stepping on the _0_ has injured you for _1_ damage!");
english.message(Message.StillHasNoWaterToPurify, "This still has no water to purify!");
english.message(Message.StirredUpCreature, "You stirred up a creature from the depths!");
english.message(Message.StoppedYourBleeding, "You have stopped your bleeding!");
english.message(Message.StopUsingRaft, "You stop using the raft.");
english.message(Message.SummonedGuardiansByDiggingTreasure, "You have summoned the guardians by digging up the treasure.");
english.message(Message.SunIsRising, "It appears the sun is rising.");
english.message(Message.SunIsSetting, "It appears the sun is setting.");
english.message(Message.SunNotBrightEnoughToStartFire, "The sun is not bright enough to start a fire with this!");
english.message(Message.Talent, "_0_ Talent");
english.message(Message.TeleportBlocked, "Your teleport destination was blocked.");
english.message(Message.Teleported, "You have teleported.");
english.message(Message.ThereIsNoSunToStartFire, "There is no sun in here to start a fire with.");
english.message(Message.ThirdQuarterOfDay, "It is currently in the third quarter of the day.");
english.message(Message.ThirdQuarterOfNight, "It is currently in the third quarter of the night.");
english.message(Message.ThisContains, "This contains: _0_.");
english.message(Message.Throw, "Throw");
english.message(Message.ThrownIntoDepths, "You have thrown _0_ into the depths below.");
english.message(Message.ThrownIntoObstacle, "You have thrown _0_ into an obstacle.");
english.message(Message.TooDamaged, "_0_ is too damaged to attempt to _1_.");
english.message(Message.TooExhaustedToJump, "You are too exhausted and overburdened to make this jump.");
english.message(Message.ToolAppearedEffectiveForGathering, "The tool in use did not appear to be effective for gathering this resource.");
english.message(Message.TrampledFire, "You trampled the fire, putting it out!");
english.message(Message.TrampledIntoGround, "_0_ trampled _1_ into the ground.");
english.message(Message.TrampleIntoGround, "You trampled _0_ into the ground.");
english.message(Message.Trampling, "You are trampling _0_.");
english.message(Message.Transmogrified, "You have transmogrified _0_.");
english.message(Message.TravelAway, "Are you sure you want to travel away from these lands? You can never return. Make sure to grab all you need!");
english.message(Message.TravelToFarOffLands, "You travel to far off lands...");
english.message(Message.TreasureIsBlocked, "You find the spot where the treasure is buried, but it is blocked.");
english.message(Message.UnableToLoadRequiredMods, "Unable to load one or more required mods.");
english.message(Message.UnEquip, "Un-equip");
english.message(Message.UnknownItem, "Unknown Item");
english.message(Message.UnlockedChest, "You unlocked the wooden chest and viewed its contents.");
english.message(Message.UnpurifiedWaterInStill, "There is unpurified water in the still.");
english.message(Message.UpdatingMod, "Updating Mod");
english.message(Message.URLHasOpenedInWebBrowser, "The URL has been opened in your default web browser.");
english.message(Message.UsedSoilToIncreaseFertility, "You used the soil to increase the fertility of the plant.");
english.message(Message.UsedSoilToSpeedUpGrowing, "You used the soil to speed up the growing process.");
english.message(Message.UsingBareFistsToFight, "using your bare fists to fight a creature");
english.message(Message.UsingBareHandsToGather, "using your bare hands to gather");
english.message(Message.WaitUntilFireCooledToGetWater, "You must wait until the fire has cooled off to get the purified water.");
english.message(Message.WalkingDistanceOfTreasure, "You are within walking distance of the treasure.");
english.message(Message.WantToDeleteAllSavedData, "Are you sure you want to permanently delete all saved data?");
english.message(Message.WantToDeleteThisGame, "Are you sure you want to delete this game?");
english.message(Message.WantToPublishThisMod, "Are you sure you want to publish this mod?");
english.message(Message.WantToPublishUpdateToMod, "Are you sure you want to publish an update to this mod?");
english.message(Message.WantToUninstallThisMod, "Are you sure you want to uninstall this mod?");
english.message(Message.Water, "water");
english.message(Message.WaterDoesNotNeedDesalination, "This water does not need to undergo the desalination process!");
english.message(Message.WaterIncreaseFertilityOfPlant, "You used the water to increase the fertility of the plant.");
english.message(Message.WaterPutOutFire, "The water has put out the fire.");
english.message(Message.WaterWouldHaveNoEffect, "The water would have no effect on this plant.");
english.message(Message.Weight, "Weight");
english.message(Message.WinFindWayBackToCivilization, "You find your way back to civilization and end your journey.");
english.message(Message.WinSailBackWithRiches, "You sail back and enjoyed a good life with your riches.");
english.message(Message.WinTravelledBackToCivilization, "You travelled back to civilization, but is this the end?");
english.message(Message.With, "with");
english.message(Message.WorkingYourselfIntoExhaustion, "You are working yourself into exhaustion!");
english.message(Message.WorkshopHasBeenOpenedPressOkAfter, "The Steam Workshop has been opened in your default browser.<br />Press OK after you're done viewing the Workshop.");
english.message(Message.Yes, "Yes");
english.message(Message.YouAte, "You ate _0_!");
english.message(Message.YouBeginResting, "You begin resting...");
english.message(Message.YouCrafted, "You _0_ _1_!");
english.message(Message.YouDied, "You died _0_!");
english.message(Message.YouDisassembled, "You disassembled _0_.");
english.message(Message.YouDrank, "You drank _0_!");
english.message(Message.YouEquip, "You equip _0_.");
english.message(Message.YouFailedTo, "You failed to _0_ _1_.");
english.message(Message.YouFire, "You fire _0_.");
english.message(Message.YouGathered, "You gathered _0_!");
english.message(Message.YouHaveKilled, "You have killed _0_!");
english.message(Message.YouOpen, "You open _0_.");
english.message(Message.YouPickedUp, "You picked up _0_.");
english.message(Message.YourFist, "your fist");
english.message(Message.YouSalvaged, "You salvaged _0_.");
english.message(Message.YouSee, "You see _0_.");
english.message(Message.YouThrew, "You threw _0_!");
english.message(Message.YouUnequip, "You un-equip _0_.");
english.message(Message.YouUsed, "You have used _0_!");

// Items
english.item(ItemType.Amber, "Amber", "Fossilized tree resin. Can be melted down to reinforce items.");
english.item(ItemType.AnimalSkull, "An Animal Skull", "A hollowed out, bleached animal skull, suitable for crafting into a provisional helmet.");
english.item(ItemType.Arrow, "An Arrow", "A projectile to be fired from a bow, crafted with an arrowhead and feather to control flight.");
english.item(ItemType.StoneArrowhead, "A Stone Arrowhead", "Crafted from stone and to be used in the crafting of arrows. Could also be used as a carving implement.");
english.item(ItemType.PileOfAsh, "A Pile of Ash", "The powdery remains of burnt matter.");
english.item(ItemType.BarkLeggings, "Bark Leggings", "Rudimentary leg armor, crafted from strong tree bark and secured with string.");
english.item(ItemType.BarkShield, "A Bark Shield", "A Makeshift shield, used to block incoming attacks, made with tree bark and wrapped with string.");
english.item(ItemType.BarkTunic, "A Bark Tunic", "Tree bark chest armor bound together with string.");
english.item(ItemType.Bone, "A Bone", "A heavy, sun-bleached animal bone, suitable for rudimentary combat, gathering, or crafting into more useful items.");
english.item(ItemType.Branch, "A Branch", "A typical tree branch, useful for a variety of crafts or stoking a fire.");
english.item(ItemType.CactusSpines, "Cactus Spines", "Thin, long spikes, suitable for crafting into makeshift needles.");
english.item(ItemType.Charcoal, "Charcoal", "Condensed, carbon-rich burnt matter.");
english.item(ItemType.CobblestoneFlooring, "Cobblestone Flooring", "Primitive flooring created by placing stones in an organized pattern, filling any gaps.");
english.item(ItemType.CookedMeat, "Cooked Meat", "Adequately heated meat, safe and ready for consumption.");
english.item(ItemType.Earthworm, "An Earthworm", "A live wriggling insect, effective for bait or eating on its own.");
english.item(ItemType.Feather, "A Feather", "Some bright white plumage from an avian creature.");
english.item(ItemType.FertileSoil, "Fertile Soil", "A rich soil suitable for adding to plants to promote their fertility.");
english.item(ItemType.WaterskinOfSeawater, "A Waterskin of Seawater", "A waterskin full of seawater, not suitable for drinking without desalination.");
english.item(ItemType.FirePlough, "A Fire Plough", "A fire making device which uses a stick and groove method to create heat through friction.");
english.item(ItemType.FlowerSeeds, "Flower Seeds", "Dried flower seeds which can be planted to grow flowers.");
english.item(ItemType.Fossil, "A Fossil", "A carbonized fossil of a species long since extinct.");
english.item(ItemType.GoldCoins, "Gold Coins", "Shiny, golden coins, from a lost civilization unknown to you.");
english.item(ItemType.GoldenChalice, "A Golden Chalice", "A large, ornate, and resplendent chalice.");
english.item(ItemType.GoldenRing, "A Golden Ring", "A golden ring, most likely used as a sign of wealth and power.");
english.item(ItemType.GoldenSword, "A Golden Sword", "An ornate, but soft sword, forged from solid gold. Not suitable for combat due to its softness.");
english.item(ItemType.GrassSeeds, "Grass Seeds", "Small dried grass seeds. Can be planted to grow grass.");
english.item(ItemType.IronOre, "Iron Ore", "Unprocessed, raw iron ore. Can be smelted into ingots.");
english.item(ItemType.Kindling, "Kindling", "A gathering of small twigs and tree matter. A requirement for starting a fire.");
english.item(ItemType.LargeRock, "A Large Rock", "A rather large rock, handy for crafting many tools and devices.");
english.item(ItemType.LeafBedroll, "A Leaf Bedroll", "A provisional bed with poor insulation and scratchy half-dried leaves, used for sleeping or resting.");
english.item(ItemType.LeatherHide, "A Leather Hide", "A fresh leather hide, stripped from an animal and de-furred.");
english.item(ItemType.Leaves, "Leaves", "A handful of foliage used as compost or to stoke a fire.");
english.item(ItemType.Limestone, "Limestone", "A mineral-rich rock that can be ground into a powder. Useful for metal and glass production.");
english.item(ItemType.Log, "A Log", "A sturdy piece of wood, useful for construction or as a fuel for a fire.");
english.item(ItemType.MortarAndPestle, "A Mortar and Pestle", "Used for grinding and crushing, made from smooth stones.");
english.item(ItemType.WhiteMushrooms, "White Mushrooms", "An edible, long lasting mushroom. It appears safe to consume.");
english.item(ItemType.Nopal, "Nopal", "A de-spined cactus fruit, filled with refreshing liquid and nutrition.");
english.item(ItemType.Peat, "Peat", "A dried mass of sponge-like plants, great for fire fuel and composting.");
english.item(ItemType.Sandstone, "Sandstone", "A soft, malleable rock, useful for construction and tool making.");
english.item(ItemType.PileOfGravel, "A Pile of Gravel", "A large pile of damp stone and sand.");
english.item(ItemType.PileOfSand, "A Pile of Sand", "A large pile of moist sand, useful for making glass when refined.");
english.item(ItemType.WoodenArrow, "A Wooden Arrow", "A provisional wooden projectile to be fired from a bow. Crafted with a feather to control flight.");
english.item(ItemType.StoneAxe, "A Stone Axe", "A dual-use tool which is both sharp and blunt. Can be used to chop wood or mine stone with ease.");
english.item(ItemType.Bandage, "A Bandage", "A tattered piece of fabric, used to staunch wounds and prevent infection.");
english.item(ItemType.WovenFabric, "Woven Fabric", "A makeshift piece of fibrous tissue, woven together into fabric.");
english.item(ItemType.CactusNeedle, "A Cactus Needle", "A needle from a cactus plant, useful in crafting smaller, more intricate items.");
english.item(ItemType.StoneShovel, "A Stone Shovel", "A digging tool made of stone, used to collect different materials from the ground or to route water.");
english.item(ItemType.WoodenSpear, "A Wooden Spear", "A makeshift, easy to craft hunting weapon. Makes an for ideal ranged weapon.");
english.item(ItemType.Suture, "A Suture", "A sharp needle tool with an attached thin string, used to sew and close gaping wounds.");
english.item(ItemType.Raft, "A Raft", "A small, simple boat; a quicker alternative to swimming. Effective for traversing large expanses of water.");
english.item(ItemType.RawMeat, "Raw Meat", "A raw, bloody chunk of meat. Cooking is recommended before consumption.");
english.item(ItemType.RedBerries, "Red Berries", "Lush, ripe berries, plucked from a tree or bush.");
english.item(ItemType.SpottedRedMushrooms, "Spotted Red Mushrooms", "An odd looking, foul smelling mushroom.");
english.item(ItemType.Rope, "Rope", "A thick, twisted piece of cordage, useful for heavy-duty binding.");
english.item(ItemType.Sapling, "A Sapling", "A young, fertile tree, suitable for replanting.");
english.item(ItemType.Seaweed, "Seaweed", "A stringy mass of sea plants. Can be used as cordage or eating in desperation.");
english.item(ItemType.SharpGlass, "Sharp Glass", "A semi-opaque shard of glass, formed after melting sand down.");
english.item(ItemType.SharpRock, "A Sharp Rock", "A sharpened rock, useful for crafting, tool making, and carving when required.");
english.item(ItemType.Skullcap, "A Skullcap", "A hollowed-out animal skull, useful as a provisional helmet.");
english.item(ItemType.SmoothRock, "A Smooth Rock", "A round, smoothed rock, useful for many crafts.");
english.item(ItemType.Soil, "Soil", "A pile of moist dirt. The heavy smell of earth permeates your nostrils when holding it.");
english.item(ItemType.StoneSpear, "A Stone Spear", "A hunting weapon crafted with a stone head, suitable as a throwing weapon.");
english.item(ItemType.Stones, "Stones", "A mass of small rocks. Can be used for throwing or crafting.");
english.item(ItemType.StoneWall, "A Stone Wall", "A series of interlaced stones and rocks, shaped into a vertical wall structure. Can be built to keep enemies out.");
english.item(ItemType.String, "String", "Woven fabric; the cornerstone of all crafting materials, mainly used for binding.");
english.item(ItemType.StrippedBark, "Stripped Bark", "A strong, fibrous shaving from a branch or log, useful for making cordage.");
english.item(ItemType.TannedLeather, "Tanned Leather", "A durable, treated piece of leather. Used in crafting armor and other tools.");
english.item(ItemType.Tannin, "Tannin", "A natural treating agent. To be applied on hides to create tanned leather.");
english.item(ItemType.ThistleSeeds, "Thistle Seeds", "Small hard seeds, used for growing thistle plants.");
english.item(ItemType.TreeBark, "Tree Bark", "A tough, dense chunk of bark, broken off from a tree or log.");
english.item(ItemType.TreeFungus, "Tree Fungus", "A semi-hard chunk of fungus, grown from a tree and possibly edible.");
english.item(ItemType.Vine, "A Vine", "A long, winding tree vine, suitable for cordage.");
english.item(ItemType.Twigs, "Twigs", "A small pile of sticks and tree limbs.");
english.item(ItemType.Waterskin, "A Waterskin", "A portable water container, made from stitched leather.");
english.item(ItemType.WoodenPole, "A Wooden Pole", "A long branch, carved and shaved down into a smooth rod.");
english.item(ItemType.PeatBandage, "A Peat Bandage", "A fabric bandage combined with peat as an effective antiseptic.");
english.item(ItemType.Bow, "A Bow", "A bent wooden pole with a shorter string tied to both ends. The tension of the string is used to fire arrows.");
english.item(ItemType.BowDrill, "A Bow Drill", "An advanced fire starting device. Uses the string on a bow to rotate into the wood, reducing much effort.");
english.item(ItemType.FishingNet, "A Fishing Net", "A checkered weave of string with weights on each corner, used to trap and catch fish.");
english.item(ItemType.RawCod, "A Raw Cod", "Slimy to the touch, but healthy and delicious to eat. Can be cooked for a better meal.");
english.item(ItemType.CookedCod, "A Cooked Cod", "A seared, well cooked cod, ready to consume and enjoy.");
english.item(ItemType.Campfire, "A Campfire", "A grouping of rocks shaped into a ring to contain a fire.");
english.item(ItemType.VineWhip, "A Vine Whip", "A makeshift weapon made simply with tree vines wrapped together.");
english.item(ItemType.PileOfSnow, "A Pile of Snow", "A melting snow pile. Useful to drink in desperate need, but be quick!");
english.item(ItemType.BarkTorch, "A Bark Torch", "A torch wrapped and bound by stripped tree bark, providing natural oils to increase the life of the torch.");
english.item(ItemType.LitBarkTorch, "A Lit Bark Torch", "Provides light to your surroundings when equipped and can also be used to start other fires.");
english.item(ItemType.HandDrill, "A Hand Drill", "A rudimentary fire making tool which uses a stick and another piece of wood. Both hands are used to twist the stick against wood, making friction to create an ember for the fire.");
english.item(ItemType.SmallBag, "A Small Bag", "A leather pouch used for holding a few items, carried at your waist, reducing encumbrance.");
english.item(ItemType.Shale, "Shale", "A brittle but sharp carving implement.");
english.item(ItemType.SharpenedBone, "A Sharpened Bone", "A sharp bone, useful for carving other objects.");
english.item(ItemType.Grindstone, "A Grindstone", "A coarse rock useful for sanding, sharpening, and repairing other items.");
english.item(ItemType.RawFishSteak, "A Raw Fish Steak", "A raw piece of fish, cut into a fillet. Good to eat as is, but is tastier cooked.");
english.item(ItemType.CookedFishSteak, "A Cooked Fish Steak", "A cooked fish fillet, seared on the outside and delicious.");
english.item(ItemType.WaterskinOfDesalinatedWater, "A Waterskin of Desalinated Water", "A waterskin full of freshly desalinated seawater.");
english.item(ItemType.BoatPaddle, "A Boat Paddle", "A makeshift boat paddle used with boats and rafts, or combat if in dire need.");
english.item(ItemType.BullBoat, "A Bull Boat", "A boat made from leather hides and framed with curved wooden poles. Used to travel to new, far away lands.");
english.item(ItemType.RefinedSand, "Refined Sand", "A finely ground sand, useful in making glass.");
english.item(ItemType.Spyglass, "A Spyglass", "An improvised, short-range telescope, which can be used to see slightly further away in any direction when equipped.");
english.item(ItemType.Flask, "A Flask", "A glass container which can be heated to use for desalination, a process used to make seawater drinkable.");
english.item(ItemType.RawClay, "Raw Clay", "A soft, formable mud. Suitable for building materials, tool-making, and more.");
english.item(ItemType.RawClayBlowpipe, "A Raw Clay Blowpipe", "An unfired clay blowpipe used in glassblowing. Unusable until it has been fired.");
english.item(ItemType.ClayBlowpipe, "A Clay Blowpipe", "A sturdy blowpipe used for glassblowing.");
english.item(ItemType.LeatherBelt, "A Leather Belt", "Made from tanned animal hide, cut, wrapped, and stitched together to tie around the waist.");
english.item(ItemType.LeatherTunic, "A Leather Tunic", "A leather garment which provides protection for the torso.");
english.item(ItemType.LeatherBoots, "Leather Boots", "Malleable yet tough foot protection, crafted from tanned animal hide.");
english.item(ItemType.LeatherCap, "A Leather Cap", "A hat made of leather, double layered for extra sturdiness.");
english.item(ItemType.LeatherGorget, "A Leather Gorget", "A circlet of leather, bound in two, stitched together and used as neck protection.");
english.item(ItemType.LeatherPants, "Leather Pants", "Basic leather leggings with just enough padding to provide some leg protection.");
english.item(ItemType.LeatherGloves, "Leather Gloves", "Leather-bound hand protection, crafted from tanned animal hide.");
english.item(ItemType.Furnace, "A Furnace", "An enclosed structure made of stone, which traps in the heat to keep a long-lasting, high-temperature fire.");
english.item(ItemType.Kiln, "A Kiln", "Similar to a furnace, but constructed from sandstone. It allows proper heat distribution for crafting glass and clay items.");
english.item(ItemType.IronTongs, "Iron Tongs", "Durable iron tongs used to grab hot items, protecting your hands from damage.");
english.item(ItemType.Talc, "Talc", "A very chalky mineral, only useful in its powder form.");
english.item(ItemType.TalcumPowder, "Talcum Powder", "Chalky and abundantly absorbent to the touch. An agent required for casting of advanced metals.");
english.item(ItemType.SandCastFlask, "A Sand Cast Flask", "A mold for casting metal into any shape, made with green sand.");
english.item(ItemType.Lens, "A Lens", "Glass formed into a partially convex shape. It allows focusing sunlight into a single location, creating enough heat for a fire.");
english.item(ItemType.PlantRoots, "Plant Roots", "A tangled mess of roots, with earth still hanging from the tips.");
english.item(ItemType.LockPick, "A Lock Pick", "An improvised needle and prong that should be strong enough to pick a lock or two.");
english.item(ItemType.BoneNeedle, "A Bone Needle", "A thin, hard, sharp needle, carved from bone.");
english.item(ItemType.Pineapple, "A Pineapple", "A juicy, ripe pineapple, loaded with vitamins and thirst-quenching attributes.");
english.item(ItemType.TatteredMap, "A Tattered Map", "An old torn map covered with drawings and scribbles, a bit hard to make sense of on first glance.");
english.item(ItemType.Coal, "Coal", "A black and brittle mineral, staining anything it touches, but useful as fuel.");
english.item(ItemType.WroughtIron, "Wrought Iron", "A heavily oxidized and unpurified form of iron, used in the forging of brittle tools, weapons, and armor.");
english.item(ItemType.LimestonePowder, "Limestone Powder", "A white, mineral-dense powder used in glass tempering and the purifying of metals.");
english.item(ItemType.IronIngot, "An Iron Ingot", "A solid brick of iron, ready to be formed or melted and cast in many ways.");
english.item(ItemType.Backpack, "A Backpack", "Crafted with leather, it's suitable for holding many items on your back, reducing overall weight.");
english.item(ItemType.RottenMeat, "Rotten Meat", "Acrid decomposing animal tissue. You would not want to eat this, but can be used in compost.");
english.item(ItemType.StoneHammer, "A Stone Hammer", "A rudimentary stone hammer, braced on the end of a pole with string. Used for gathering and repairing.");
english.item(ItemType.RawChicken, "A Raw Chicken", "A small, plump and de-feathered chicken carcass, ready for cooking.");
english.item(ItemType.CookedChicken, "A Cooked Chicken", "A well cooked chicken, ready to consume and sure to satisfy.");
english.item(ItemType.ForgeAndAnvil, "A Forge and Anvil", "A combination of a stone forge and anvil. Used in the production of metal armor, weapons, and tools.");
english.item(ItemType.WoodenChest, "A Wooden Chest", "A large wooden container that can fit many items while placed on the ground. Foods will decay slower within it.");
english.item(ItemType.IronSword, "An Iron Sword", "A strong, sharp blade designed for thrusting and slashing.");
english.item(ItemType.IronBreastplate, "An Iron Breastplate", "Durable, armor worn over the torso. One could take a serious beating while wearing this.");
english.item(ItemType.IronBoots, "Iron Boots", "Heavy iron plated boots, shielding your feet from damage.");
english.item(ItemType.IronHelmet, "An Iron Helmet", "Iron plated headgear designed to withstand heavy blows.");
english.item(ItemType.IronGorget, "An Iron Gorget", "A round metal brace worn around the neck and over the shoulders.");
english.item(ItemType.IronGreaves, "Iron Greaves", "Iron leggings; to be strapped on and function as leg protection.");
english.item(ItemType.IronGauntlets, "Iron Gauntlets", "Iron gloves designed to be protective and durable, while maintaining as much flexibility as possible.");
english.item(ItemType.IronShield, "An Iron Shield", "A large and heavy iron shield, used for blocking projectiles or melee attacks.");
english.item(ItemType.SandstoneWall, "A Sandstone Wall", "A constructed wall built from mined sandstone.");
english.item(ItemType.SandstoneFlooring, "Sandstone Flooring", "A group of sandstone bricks, placed in a grid to be used as flooring.");
english.item(ItemType.SpiderSilk, "Spider Silk", "A delicate but strong strand of silk, produced by a spider. Can be used as cordage.");
english.item(ItemType.AnimalFat, "Animal Fat", "A gelatinous shaving of animal fat, slimy to the touch. Useful as a rendered fuel.");
english.item(ItemType.AnimalFatTorch, "An Animal Fat Torch", "A torch; wrapped in rendered animal fat, producing a long-lasting light source.");
english.item(ItemType.ClayFlakes, "Clay Flakes", "Dried shavings of clay. Created by shaving clay and drying over a period of time.");
english.item(ItemType.GreenSand, "Green Sand", "A form of malleable sand made with clay, used to make molds for metal casting.");
english.item(ItemType.OldInstructionalScroll, "An Old Instructional Scroll", "A tattered sheet of paper with some roughly scribbled instructions and diagrams.");
english.item(ItemType.SlimeGelatin, "Slime Gelatin", "A lump of slime gelatin which jiggles upon your touch. Can be used to preserve food, or melted down and used as glue.");
english.item(ItemType.Glue, "Glue", "A natural form of glue that can be used to bind and reinforce items.");
english.item(ItemType.CookedSpider, "A Cooked Spider", "A crispy spider. Not the best texture or flavor, but contains small bits of white meat inside.");
english.item(ItemType.DeadSpider, "A Dead Spider", "A spider's carcass. It's hard to stomach, even when cooked. Try not to think about what you're eating.");
english.item(ItemType.IronLockPick, "An Iron Lock Pick", "A pair of iron picks and wrenches, durable enough to pick the most adept of locks.");
english.item(ItemType.RottingVegetation, "Rotting Vegetation", "A stinking mash of organic plant matter, now usable as compost. Unless you want to risk eating it.");
english.item(ItemType.WildOnion, "A Wild Onion", "A strong smelling and tasting plant, packed with nutrients and vitamins.");
english.item(ItemType.IronHammer, "An Iron Hammer", "A strong hammer with an iron head, perfect for shaping and repairing items.");
english.item(ItemType.IronSpear, "An Iron Spear", "A polearm with a strong pointed tip forged from iron.");
english.item(ItemType.IronShovel, "An Iron Shovel", "A heavy iron digging implement, lifting and breaking through even the toughest gravels and soils.");
english.item(ItemType.IronDoubleAxe, "An Iron Double Axe", "An axe with a forged, double sided head, ideal for both combat and gathering.");
english.item(ItemType.IronPickaxe, "An Iron Pickaxe", "A robust mining implement, with a blade forged from iron.");
english.item(ItemType.Inkstick, "An Inkstick", "A hardened brick of ink, used for drawing and painting.");
english.item(ItemType.Coconut, "A Coconut", "A fibrous and heavy fruit. Difficult to consume, but packed with plenty of caloric-dense coconut meat and milk.");
english.item(ItemType.PalmLeaf, "A Palm Leaf", "A large leaf from a palm tree. The strong inner fibers of the leaf are perfect for cordage.");
english.item(ItemType.Offal, "Offal", "A mound of organs, tissue, and other undesirable portions of an unlucky animal.");
english.item(ItemType.Bones, "Bones", "A bundle of bones from a small vertebrate. Some cracked, others shattered. The pieces are quite sharp.");
english.item(ItemType.LitPoleTorch, "A Lit Pole Torch", "A wooden pole that has been lit on fire. Not suitable for long journeys in the darkness.");
english.item(ItemType.Cotton, "Cotton", "A downy bundle of opened cotton seeds, the ideal solution for spinning thread and making fabrics.");
english.item(ItemType.CottonSeeds, "Cotton Seeds", "Unopened, plantable cotton seeds, not yet revealing their white, soft interiors.");
english.item(ItemType.CottonFabric, "Cotton Fabric", "A soft piece of cloth spun from cotton.");
english.item(ItemType.BonePole, "A Bone Pole", "A smooth cudgel crafted from a large bone.");
english.item(ItemType.Tourniquet, "A Tourniquet", "A hard stud twisted together with a string. Used to twist around a bleeding wound to stem the flow of blood.");
english.item(ItemType.WroughtIronPickaxe, "A Wrought Iron Pickaxe", "A dual-headed mining implement. One head is heavy and blunt, the other, spiked to cut through rock with ease.");
english.item(ItemType.WroughtIronDoubleAxe, "A Wrought Iron Double Axe", "A dual-bladed axe which can provide enough slashing damage for both combat and gathering.");
english.item(ItemType.WroughtIronShovel, "A Wrought Iron Shovel", "A shovel with an angled, pointed head, useful for digging and water routing.");
english.item(ItemType.WroughtIronSpear, "A Wrought Iron Spear", "A polearm with pointed head, crafted from wrought iron. Used in melee or thrown in combat.");
english.item(ItemType.WroughtIronHammer, "A Wrought Iron Hammer", "A large mallet crafted from wrought iron. Useful for repairing and sometimes gathering.");
english.item(ItemType.WroughtIronLockPick, "A Wrought Iron Lock Pick", "A set of picks and wrenches made from wrought iron, used for picking and unlocking locked devices.");
english.item(ItemType.WroughtIronShield, "A Wrought Iron Shield", "A sturdy wrought iron shield, made by bending large sheets of metal into shape.");
english.item(ItemType.WroughtIronGauntlets, "Wrought Iron Gauntlets", "Intricate and sturdy, these wrought iron gloves fit snugly on your hands.");
english.item(ItemType.WroughtIronGreaves, "Wrought Iron Greaves", "Wrought iron leggings, strapped and padded around the legs to reduce most damage.");
english.item(ItemType.WroughtIronGorget, "A Wrought Iron Gorget", "A molded piece of metal, used to protect the area around the neck and shoulders.");
english.item(ItemType.WroughtIronHelmet, "A Wrought Iron Helmet", "Using a barbute design, this iron helmet shields the head from most kinds of attacks.");
english.item(ItemType.WroughtIronBoots, "Wrought Iron Boots", "Wrought iron footwear. Heavy and made specifically for protecting feet and lower legs.");
english.item(ItemType.WroughtIronBreastPlate, "A Wrought Iron Breastplate", "A large wrought iron chest plate, worn over the torso.");
english.item(ItemType.WroughtIronSword, "A Wrought Iron Sword", "A long, sharpened blade fitted into a solid hilt and forged from wrought iron. A good, strong weapon.");
english.item(ItemType.WoodenWall, "A Wooden Wall", "A sturdy set of bound logs, forming a protective wall that can be placed.");
english.item(ItemType.WoodenFlooring, "Wooden Flooring", "Wooden floor boards; planed to equal height and length.");
english.item(ItemType.WoodenDoor, "A Wooden Door", "A door crafted from long wooden planks with large wooden hinges. Can be opened and closed when built.");
english.item(ItemType.FishingRod, "A Fishing Rod", "A flexible, smooth wooden rod with a string line and sharpened hook. Used for fly fishing.");
english.item(ItemType.MessageInABottle, "A Message in a Bottle", "An old cloudy bottle with an unidentified object contained inside.");
english.item(ItemType.CarbonPowder, "Carbon Powder", "Black, sooty carbonized powder.");
english.item(ItemType.PileOfCompost, "A Pile of Compost", "A mix of decaying organic matter and soil, full of chemical nutrients and great for growing plants.");
english.item(ItemType.MeltedAmber, "Melted Amber", "Warmed amber resin; used to create a hardened bind when cooled on to an object.");
english.item(ItemType.Tinder, "Tinder", "A dry bunch of wooden shavings, used to ignite kindling when starting a fire.");
english.item(ItemType.Deadfall, "A Deadfall", "A large, flat rock, propped up with a stick. Once set, anything that triggers it will be crushed or injured from the falling rock.");
english.item(ItemType.Snare, "A Snare", "A short pole pushed into the ground with a string attached. Designed to ensnare creatures in its slipknot.");
english.item(ItemType.WaterskinOfMedicinalWater, "A Waterskin of Medicinal Water", "A soothing mixture of plants and roots. Used to heal poisons and illnesses.");
english.item(ItemType.CharcoalBandage, "A Charcoal Bandage", "A cloth bandage, coated in charcoal and used for its natural antiseptic and anticoagulant properties.");
english.item(ItemType.WoodenTongs, "Wooden Tongs", "A pair of simple wood tongs, used to pick up hot objects without injury.");
english.item(ItemType.WroughtIronTongs, "Wrought Iron Tongs", "A pair of tongs, forged from wrought iron. Used to lift hot objects without injury.");
english.item(ItemType.SheetOfGlass, "A Sheet of Glass", "A cloudy tempered piece of glass. Practical for many optical tools and other simple devices used to harness the sun.");
english.item(ItemType.SolarStill, "A Solar Still", "A still that collects condensation and filters it into in a hole beneath the glass, desalinating the water and draining it into a container.");
english.item(ItemType.StoneWaterStill, "A Stone Water Still", "A hollowed out rock with a stone lid. It's used to desalinate water by boiling it and then collecting the steam into a separate container.");
english.item(ItemType.Sundial, "A Sundial", "A stone timepiece that uses the location of the sun or moon to show the approximate time of day or night.");
english.item(ItemType.LitAnimalFatTorch, "A Lit Animal Fat Torch", "A bright burning, pleasant smelling torch. Made with a pole and long lasting, rendered animal fat.");
english.item(ItemType.Sinew, "Sinew", "Strong and flexible animal tissue. Commonly used for making bows or simple cordage.");
english.item(ItemType.ShortBow, "A Short Bow", "A bow designed for powerful shots at close range.");
english.item(ItemType.LongBow, "A Long Bow", "Nearly as tall as the average person, this bow is designed for maximum range.");
english.item(ItemType.CompositeBow, "A Composite Bow", "An expertly crafted bow, designed for both velocity and force.");
english.item(ItemType.WaterskinOfPurifiedFreshWater, "A Waterskin of Purified Fresh Water", "A full waterskin of fresh, safe-to-drink water.");
english.item(ItemType.WaterskinOfUnpurifiedFreshWater, "A Waterskin of Unpurified Fresh Water", "Unpurified and possibly hazardous water. It is recommended you purify the water before drinking.");
english.item(ItemType.GlassBottle, "A Glass Bottle", "A transparent vessel with a cork for containment. Used for collecting water.");
english.item(ItemType.Cork, "A Cork", "A small cork plug. Crafted from rubbery tree bark; it can be used to contain liquids in bottles and other containers.");
english.item(ItemType.GlassBottleOfSeawater, "A Glass Bottle of Seawater", "Filled to the top with seawater. While seawater is technically drinkable, it will not reduce your thirst.");
english.item(ItemType.GlassBottleOfDesalinatedWater, "A Glass Bottle of Desalinated Water", "A bottle filled with clear seawater that has been processed to remove the salt content.");
english.item(ItemType.GlassBottleOfMedicinalWater, "A Glass Bottle of Medicinal Water", "A bottled concoction of herbs and nutrients. Used to cure thirst, poisons, and other ailments.");
english.item(ItemType.GlassBottleOfPurifiedFreshWater, "A Glass Bottle of Purified Fresh Water", "Potable, and safe to hydrate yourself with. The water has been purified reducing any toxins and unsafe bacteria.");
english.item(ItemType.GlassBottleOfUnpurifiedFreshWater, "A Glass Bottle of Unpurified Fresh Water", "A bottle containing water that is likely unfit to drink. It will quench your thirst, but may have negative side-effects until it's purified.");
english.item(ItemType.WroughtIronArrow, "A Wrought Iron Arrow", "An arrow with a wrought iron arrowhead. The shaft of the arrow is long and is fletched with feathers.");
english.item(ItemType.IronArrow, "An Iron Arrow", "An arrow tipped with a high quality iron arrowhead. Fletched with feathers to stabilize flight and accuracy.");
english.item(ItemType.StoneBullet, "A Stone Bullet", "A basic stone projectile for slings and firearms. Smooth and more or less spherical in shape.");
english.item(ItemType.WroughtIronBullet, "A Wrought Iron Bullet", "A small ball of wrought iron, used as ammunition for slingshots or firearms.");
english.item(ItemType.IronBullet, "An Iron Bullet", "A strong, forged iron bullet. Used as sling or firearm ammunition.");
english.item(ItemType.LeatherQuiver, "A Leather Quiver", "A leather-bound, back-mounted container designed to hold arrows; however, other items will also fit inside as well.");
english.item(ItemType.Ectoplasm, "Ectoplasm", "A ghostly, weightless fluff of misty goo, strangely self contained and quickly evaporating.");
english.item(ItemType.MagicalEssence, "Magical Essence", "An odd transparent powder with organic and ethereal materials. This magical matter may be used on items to affix magical properties on to them.");
english.item(ItemType.WoodenFence, "A Wooden Fence", "A section of wooden fencing, constructed from three logs and held together with horizontal beams.");
english.item(ItemType.MonsterIdol, "A Monster Idol", "A mass of animal organs, crudely shaped into some kind of figure. It smells awful and emits an odd humming noise, and appears to attract creatures.");
english.item(ItemType.CordedSling, "A Corded Sling", "A thick piece of cordage, wrapped and bound with a slot made for a projectile. Used to swing ammunition, increasing throwing range.");
english.item(ItemType.LeatherSling, "A Leather Sling", "A sling crafted from tanned leather. Designed to hold a projectile to be thrown at an increased velocity.");
english.item(ItemType.WroughtIronArrowhead, "A Wrought Iron Arrowhead", "Forged with wrought iron, this arrowhead is used to craft an arrow. In dire need, it could also be used for carving.");
english.item(ItemType.IronArrowhead, "An Iron Arrowhead", "An expertly forged iron arrowhead, used to create arrows. Alternatively can be used to carve if necessary.");
english.item(ItemType.Hammock, "A Hammock", "A comfortable place to sleep, although not too sturdy. Crafted by bound cordage and usually hung off of the ground.");
english.item(ItemType.CottonBedroll, "A Cotton Bedroll", "A soft and downy sleeping mattress, rolled up for ease of carrying. Can be used to sleep or rest very comfortably.");
english.item(ItemType.FeatherBedroll, "A Feather Bedroll", "A bedroll made with soft feathers and wrapped in fabric. Used for resting and sleeping in comfort.");
english.item(ItemType.RawTaintedMeat, "Raw Tainted Meat", "A piece of bad-smelling meat, possibly diseased or tainted with parasites. Possible to consume, but could be deadly.");
english.item(ItemType.CookedTaintedMeat, "Cooked Tainted Meat", "A piece of discolored meat, cooked to kill possible toxins, but possibly still unsafe for consumption.");
english.item(ItemType.StoneKnife, "A Stone Knife", "A sharpened piece of stone, carved into a blade, with a handle for support. Can be used as a weapon, gathering tool or to carve.");
english.item(ItemType.RawBlindfish, "A Raw Blindfish", "An odd looking fish with no eyes. Very slimy to the touch.");
english.item(ItemType.CookedBlindfish, "A Cooked Blindfish", "While the source of the food is a bit suspect, after being cooked, it appears to be more palatable.");
english.item(ItemType.Pemmican, "Pemmican", "A ball of dried ground meat. With a long shelf life, this is the ultimate survival food. For the best benefits, prepare it with animal fat.");
english.item(ItemType.PreparedPemmican, "Prepared Pemmican", "A seasoned mound of dried ground meat, fried and cooked with fat for maximum flavor and caloric content.");
english.item(ItemType.Sail, "A Sail", "A large piece of fabric, woven together to be attached to a mast. Used on a sailboat to propel it along the sea.");
english.item(ItemType.Sailboat, "A Sailboat", "A large one-man boat. Used to traverse large expanses of water and for travel back to civilization.");
english.item(ItemType.Egg, "An Egg", "A brown colored egg, laid by a chicken. Can be eaten as is, or cooked for a tastier meal.");
english.item(ItemType.BoiledEgg, "A Boiled Egg", "A moist, delicious boiled egg. Great tasting and packed with protein.");
english.item(ItemType.GrassBlades, "Grass Blades", "Long and almost sharp to the touch. These semi-dried grass blades are perfect for cordage and string making.");
english.item(ItemType.Niter, "Niter", "A natural mineral, ground up to be used as a preservative or for other chemical applications.");
english.item(ItemType.Saltpeter, "Saltpeter", "A ground mineral, to be used as a natural food preservative. If combined with other minerals, it can be combustible.");
english.item(ItemType.BlackPowder, "Black Powder", "A highly combustible powder, made up of a combination of minerals.");
english.item(ItemType.FlintlockPistol, "A Flintlock Pistol", "A long range, high damage pistol. Requires black powder and bullets to fire.");
english.item(ItemType.Giblets, "Giblets", "A batch of cooked animal organs. Considerably repugnant, but nutritious and filling.");
english.item(ItemType.ExplosiveTrap, "An Explosive Trap", "A mound of leaves used to conceal a volatile explosive powder. Stepping on it will trigger a small explosion.");
english.item(ItemType.SkeletalMageWand, "A Skeletal Mage Wand", "A mysterious, gnarled staff with a twinkling red gemstone attached to the end.");
english.item(ItemType.RawClayJug, "A Raw Clay Jug", "A formed and sculpted jug molded from raw clay. Requires a kiln to be fired and hardened.");
english.item(ItemType.ClayJug, "A Clay Jug", "A fully hardened clay jug with a cork. Used to hold water.");
english.item(ItemType.ClayJugOfSeawater, "A Clay Jug of Seawater", "Unfiltered seawater, held in a clay jug. Unsuitable to drink in its current form but could be desalinated.");
english.item(ItemType.ClayJugOfDesalinatedWater, "A Clay Jug of Desalinated Water", "Potable, safe-to-drink water. The water in this clay jug has gone through the desalination process.");
english.item(ItemType.ClayJugOfMedicinalWater, "A Clay Jug of Medicinal Water", "A clay jug containing medicinal water, used to cure and soothe certain ailments while also replenishing your thirst.");
english.item(ItemType.ClayJugOfPurifiedFreshWater, "A Clay Jug of Purified Fresh Water", "A clay jug filled with fresh, purified water. Can be used to quench your thirst.");
english.item(ItemType.ClayJugOfUnpurifiedFreshWater, "A Clay Jug of Unpurified Fresh Water", "A clay jug full of natural, fresh water. Although it is drinkable, further purification is recommended.");
english.item(ItemType.RawClayBrick, "A Raw Clay Brick", "A soft piece of raw clay, molded into a rectangle. Ready to be fired inside a kiln.");
english.item(ItemType.ClayBrick, "A Clay Brick", "A hardened clay brick, used in the building of structures such as floors and walls.");
english.item(ItemType.ClayBrickWall, "A Clay Brick Wall", "A wall made from clay bricks, set into a typical skewed, grid-like fashion to increase durability.");
english.item(ItemType.ClayBrickFlooring, "Clay Brick Flooring", "Flooring crafted from clay bricks. Could be used as decoration or as part of a building.");
english.item(ItemType.PineappleSeeds, "Pineapple Seeds", "Small brown seeds that can be planted to grow into pineapple plants.");
english.item(ItemType.BerrySeeds, "Berry Seeds", "Black seeds that will grow into a berry bush, given enough time and care.");
english.item(ItemType.CactiSeeds, "Cacti Seeds", "These appear to be cactus seeds. Can be planted to grow cacti or eaten.");
english.item(ItemType.VineSeeds, "Vine Seeds", "Seeds to grow vines. Can be eaten if desperate, but they do not contain any significant nutrition.");
english.item(ItemType.PaperSheet, "Paper Sheet", "A large piece of paper. It appears to contain many recycled fibers. Suitable for drawing on with ink.");
english.item(ItemType.PaperMold, "Paper Mold", "A mold used for making paper. Contains a screen that holds wet recycled fibers to dry and press into flattened, usable paper.");
english.item(ItemType.FlowerPetals, "Flower Petals", "The petals of a yellow flower. Only useful in creating medicinal tonics, or ingesting directly if food supply is low.");
english.item(ItemType.Thistles, "Thistles", "The flowering bulb of a thistle plant. Filled with a bitter but nutritious milk.");
english.item(ItemType.DrawnMap, "Drawn Map", "A paper sheet, scrawled with geographical landmarks and features. Used to approximate a location when read.");

// Groups
english.itemGroup(ItemTypeGroup.Sharpened, "Sharpened");
english.itemGroup(ItemTypeGroup.Pole, "Pole");
english.itemGroup(ItemTypeGroup.Rock, "Rock");
english.itemGroup(ItemTypeGroup.Fuel, "Fuel");
english.itemGroup(ItemTypeGroup.Needle, "Needle");
english.itemGroup(ItemTypeGroup.Hammer, "Hammer");
english.itemGroup(ItemTypeGroup.LightSource, "Light Source");
english.itemGroup(ItemTypeGroup.Bone, "Bone");
english.itemGroup(ItemTypeGroup.Fabric, "Fabric");
english.itemGroup(ItemTypeGroup.Cordage, "Cordage");
english.itemGroup(ItemTypeGroup.Insect, "Insect");
english.itemGroup(ItemTypeGroup.Carbon, "Carbon");
english.itemGroup(ItemTypeGroup.Compost, "Compost");
english.itemGroup(ItemTypeGroup.Medicinal, "Medicinal");
english.itemGroup(ItemTypeGroup.Tongs, "Tongs");
english.itemGroup(ItemTypeGroup.Water, "Water");
english.itemGroup(ItemTypeGroup.WaterskinOfPotableWater, "Waterskin of Potable Water");
english.itemGroup(ItemTypeGroup.GlassBottleOfPotableWater, "Glass Bottle of Potable Water");
english.itemGroup(ItemTypeGroup.Container, "Container");
english.itemGroup(ItemTypeGroup.Arrow, "Arrow");
english.itemGroup(ItemTypeGroup.Bullet, "Bullet");
english.itemGroup(ItemTypeGroup.SharpenedRock, "Sharpened Rock");
english.itemGroup(ItemTypeGroup.Utensil, "Utensil");
english.itemGroup(ItemTypeGroup.Meat, "Meat");
english.itemGroup(ItemTypeGroup.Treasure, "Treasure");
english.itemGroup(ItemTypeGroup.Repair, "Repair");
english.itemGroup(ItemTypeGroup.Transmogrify, "Transmogrify");
english.itemGroup(ItemTypeGroup.Reinforce, "Reinforce");
english.itemGroup(ItemTypeGroup.Preserve, "Preserve");
english.itemGroup(ItemTypeGroup.Food, "Food");
english.itemGroup(ItemTypeGroup.Pulp, "Pulp");
english.itemGroup(ItemTypeGroup.ClayJugOfPotableWater, "Clay Jug of Potable Water");
english.itemGroup(ItemTypeGroup.Powder, "Powder");
english.itemGroup(ItemTypeGroup.Equipment, "Equipment");
english.itemGroup(ItemTypeGroup.Gardening, "Gardening");
english.itemGroup(ItemTypeGroup.Firemaking, "Firemaking");
english.itemGroup(ItemTypeGroup.Bedding, "Bedding");
english.itemGroup(ItemTypeGroup.Tool, "Tool");
english.itemGroup(ItemTypeGroup.Weapon, "Weapon");
english.itemGroup(ItemTypeGroup.Health, "Health");
english.itemGroup(ItemTypeGroup.Travel, "Travel");
english.itemGroup(ItemTypeGroup.Housing, "Housing");
english.itemGroup(ItemTypeGroup.Heating, "Heating");
english.itemGroup(ItemTypeGroup.Storage, "Storage");
english.itemGroup(ItemTypeGroup.Trap, "Trap");
english.itemGroup(ItemTypeGroup.Other, "Other");
english.itemGroup(ItemTypeGroup.RawMeat, "Raw Meat");
english.itemGroup(ItemTypeGroup.CookedMeat, "Cooked Meat");
english.itemGroup(ItemTypeGroup.ContainerOfSeawater, "Container of Seawater");
english.itemGroup(ItemTypeGroup.ContainerOfDesalinatedWater, "Container of Desalinated Water");
english.itemGroup(ItemTypeGroup.ContainerOfMedicinalWater, "Container of Medicinal Water");
english.itemGroup(ItemTypeGroup.ContainerOfPurifiedFreshWater, "Container of Purified Fresh Water");
english.itemGroup(ItemTypeGroup.ContainerOfUnpurifiedFreshWater, "Container of Unpurified Fresh Water");

// Doodads
english.doodad(DoodadType.YellowFlowers, "Yellow Flowers", "yellow flowers");
english.doodad(DoodadType.DeadBush, "Dead Bush");
english.doodad(DoodadType.Cacti, "Cacti", "cacti");
english.doodad(DoodadType.BerryBush, "A Berry Bush", "berry bush");
english.doodad(DoodadType.TallGrass, "Tall Grass");
english.doodad(DoodadType.Thistles, "Thistles", "thistles");
english.doodad(DoodadType.PineapplePlant, "A Pineapple Plant", "pineapple plant");
english.doodad(DoodadType.Vines, "Vines", "vines");
english.doodad(DoodadType.Campfire, "A Campfire");
english.doodad(DoodadType.LitCampfire, "A Lit Campfire");
english.doodad(DoodadType.WoodenChest, "A Wooden Chest");
english.doodad(DoodadType.LockedWoodenChest, "A Locked Wooden Chest");
english.doodad(DoodadType.Furnace, "A Furnace");
english.doodad(DoodadType.LitFurnace, "A Lit Furnace");
english.doodad(DoodadType.PileOfRocks, "Pile of Rocks");
english.doodad(DoodadType.Kiln, "A Kiln");
english.doodad(DoodadType.LitKiln, "A Lit Kiln");
english.doodad(DoodadType.ForgeAndAnvil, "A Forge and Anvil");
english.doodad(DoodadType.LitForgeAndAnvil, "A Lit Forge and Anvil");
english.doodad(DoodadType.GrowingMushroom, "Growing Mushroom");
english.doodad(DoodadType.GrowingPlant, "Growing Plant");
english.doodad(DoodadType.SetExplosiveTrap, "A Set Explosive Trap");
english.doodad(DoodadType.StoneWaterStill, "A Stone Water Still");
english.doodad(DoodadType.LitStoneWaterStill, "A Lit Stone Water Still");
english.doodad(DoodadType.SetHobgoblinSnare, "A Set Hobgoblin Snare");
english.doodad(DoodadType.Acid, "Acid");
english.doodad(DoodadType.TorchStand, "A Torch Stand");
english.doodad(DoodadType.LitTorchStand, "A Lit Torch Stand");
english.doodad(DoodadType.SetDeadfall, "A Set Deadfall");
english.doodad(DoodadType.SetSnare, "A Set Snare");
english.doodad(DoodadType.WoodenDoor, "A Wooden Door");
english.doodad(DoodadType.WoodenFence, "A Wooden Fence");
english.doodad(DoodadType.WoodenWall, "A Wooden Wall");
english.doodad(DoodadType.ClayBrickWall, "A Clay Brick Wall");
english.doodad(DoodadType.SandstoneWall, "A Sandstone Wall");
english.doodad(DoodadType.StoneWall, "A Stone Wall");
english.doodad(DoodadType.SolarStill, "A Solar Still");
english.doodad(DoodadType.MonsterIdol, "A Monster Idol");
english.doodad(DoodadType.GrassSeeds, "Grass Seeds");
english.doodad(DoodadType.WhiteMushrooms, "White Mushrooms", "white mushrooms");
english.doodad(DoodadType.SpottedRedMushroom, "A Spotted Red Mushroom", "spotted red mushroom");
english.doodad(DoodadType.Seaweed, "Seaweed");
english.doodad(DoodadType.WildOnion, "A Wild Onion", "wild onion");
english.doodad(DoodadType.Sapling, "A Sapling");
english.doodad(DoodadType.Cotton, "Cotton", "cotton");
english.doodad(DoodadType.Tree, "A Tree");
english.doodad(DoodadType.TreeWithVines, "A Tree with Vines");
english.doodad(DoodadType.TreeWithBerries, "A Tree with Berries");
english.doodad(DoodadType.TreeWithFungus, "A Tree with Fungus");
english.doodad(DoodadType.BareTree, "A Bare Tree");
english.doodad(DoodadType.PalmTreeWithCoconuts, "A Palm Tree with Coconuts");
english.doodad(DoodadType.PalmTree, "A Palm Tree");
english.doodad(DoodadType.BarePalmTree, "A Bare Palm Tree");
english.doodad(DoodadType.CaveEntrance, "A Cave Entrance");
english.doodad(DoodadType.OpenWoodenDoor, "An Open Wooden Door");

// Uses
english.use(ActionType.Rest, "Rest", "Used to rest for a period of time to regain health and stamina. You will stop resting when reaching full stamina.");
english.use(ActionType.Sleep, "Sleep", "Used to sleep for a period of time to regain health and stamina. Duration is based on Camping skill and time of day. A bonus to all effects (including length) will be granted if facing a fire or lit object. Hunger and dehydration increases slower while sleeping.");
english.use(ActionType.Eat, "Eat", "Consumed on use. May provide benefits to hunger, thirst, health and stamina; however, may reduce them as well depending on the food.");
english.use(ActionType.Drink, "Drink", "Consumed on use. Will reduce your thirst; however, will provide negative effects when drinking sea/unpurified water.");
english.use(ActionType.Carve, "Carve", "Used to carve creature corpses or to remove objects attached to the ground.");
english.use(ActionType.Dig, "Dig", "Used to dig up resources and items from the ground.");
english.use(ActionType.Cast, "Cast", "Find a fish in a body of water and attempt to cast your line or net to catch it.");
english.use(ActionType.Shoot, "Shoot", "You can shoot arrows with this item.");
english.use(ActionType.SetDown, "Set Down", "Using this item will place it over top of whatever tile is present in your facing direction. This is different than just dropping the item. It can also be used to extinguish fires.");
english.use(ActionType.Sling, "Sling", "You can sling bullets with this item.");
english.use(ActionType.Paddle, "Paddle", "Used to travel over water without getting your feet wet. Your speed is not reduced in water while paddling.");
english.use(ActionType.StartFire, "Start Fire", "Used to start a fire. This cannot be used on some non-dry tiles without fuel. Use on Campfires, Furnaces, Kilns, etc. to light them. Using this action may require Kindling, Tinder and a fuel item in your inventory depending on the circumstance.");
english.use(ActionType.GatherWater, "Gather Water", "Used to gather water into the item.");
english.use(ActionType.LockPick, "Lock Pick", "Used to unlock locked objects.");
english.use(ActionType.Repair, "Repair", "Use while facing a damaged item to attempt to repair it. Success based on skill used to make the item.");
english.use(ActionType.Heal, "Heal", "Consumed on use. Used to restore a varied amount of health.");
english.use(ActionType.TraverseTheSea, "Traverse The Sea", "Used to travel to new, unexplored lands, leaving behind your current surroundings.");
english.use(ActionType.Decode, "Decode", "Used for attempting to read the map. Use by the treasure location to reveal how far or close you are.");
english.use(ActionType.Ignite, "Ignite", "Use this item on a fire source to start it on fire.");
english.use(ActionType.Read, "Read", "Consumed on use. Reading usually provides useful knowledge.");
english.use(ActionType.Reinforce, "Reinforce", "Consumed on use. Use while facing a damaged item to attempt to increase the overall maximum and minimum durability. Success based on skill used to make the item.");
english.use(ActionType.OpenContainer, "Open Container", "Using this will open it where you may drag and drop items to and from. Weight reduction and decay reduction bonuses may apply to items inside.");
english.use(ActionType.Open, "Open", "Consumed on use. Using this will open it, providing new and unknown items.");
english.use(ActionType.Cure, "Cure", "Consumed on use. Used to cure a poison or burning pain while sometimes providing other health benefits.");
english.use(ActionType.TellTime, "Tell Time", "Used to measure the time of day or night.");
english.use(ActionType.Transmogrify, "Transmogrify", "Use while facing an equippable item to attempt to infuse with magical properties.");
english.use(ActionType.StokeFire, "Stoke Fire", "Used on a fire source to increase the strength of the flame.");
english.use(ActionType.Pour, "Pour", "Pour on fire to extinguish the flames, pour inside a water still to begin water filtration, pour on a suitable plant to increase its health, or just simply empty out.");
english.use(ActionType.Plant, "Plant", "Attempts to plant the item on the tile you are facing towards. Some plants may require certain ground types or conditions to be planted.");
english.use(ActionType.Garden, "Garden", "Use on a plant to increase its fertility. Can only be used on some plant types.");
english.use(ActionType.Build, "Build", "Attempt to construct or assemble the item on the tile you are facing towards.");
english.use(ActionType.GatherTreasure, "Gather Treasure", "Attempt to gather a treasure in the vicinity of use based on a decoded treasure map. Range of gather is dependent on your Mining skill.");
english.use(ActionType.SailToCivilization, "Sail To Civilization", "After collecting enough treasure, you can return to civilization and bask in the glory of your riches and fame. And start a new adventure!");
english.use(ActionType.Preserve, "Preserve", "Used with food items to extend their life and decay rate.");
english.use(ActionType.Fire, "Fire", "Using a mixture of Black Powder along with a bullet, you may fire this weapon.");
english.use(ActionType.Gather, "Gather", "Can be used directly to gather from an adjacent resource tile. Equipping this allows it to be automatically used when walking into resource tiles.");
english.use(ActionType.Teleport, "Teleport", "With a flick of the wand, teleport to a location in front of where you are facing.");
english.use(ActionType.Extinguish, "Extinguish", "Douse the torch, extinguishing the flame.");
english.use(ActionType.DrawMap, "Draw Map", "Draw a map using your skill in cartography of the surrounding area.");
english.use(ActionType.Attack, "Attack", "");
english.use(ActionType.Throw, "Throw", "");
english.use(ActionType.Pickup, "Pick-up", "");
english.use(ActionType.Disassemble, "Disassemble", "");

// Terrain/tiles
english.terrain(TerrainType.DeepSeawater, "Deep Seawater");
english.terrain(TerrainType.Seawater, "Seawater");
english.terrain(TerrainType.ShallowSeawater, "Shallow Seawater");
english.terrain(TerrainType.Ash, "Ash");
english.terrain(TerrainType.Cobblestone, "Cobblestone");
english.terrain(TerrainType.Dirt, "Dirt");
english.terrain(TerrainType.CaveEntrance, "A Cave Entrance");
english.terrain(TerrainType.Trees, "Trees");
english.terrain(TerrainType.Grass, "Grass");
english.terrain(TerrainType.Gravel, "Gravel");
english.terrain(TerrainType.Rocks, "Rocks");
english.terrain(TerrainType.Sand, "Sand");
english.terrain(TerrainType.Sandstone, "Sandstone");
english.terrain(TerrainType.Snow, "Snow");
english.terrain(TerrainType.Swamp, "Swamp");
english.terrain(TerrainType.Clay, "Clay");
english.terrain(TerrainType.SandstoneFloor, "Sandstone Floor");
english.terrain(TerrainType.PalmTrees, "Palm Trees");
english.terrain(TerrainType.BarePalmTrees, "Bare Palm Trees");
english.terrain(TerrainType.BareTrees, "Bare Trees");
english.terrain(TerrainType.WoodenFloor, "Wooden Floor");
english.terrain(TerrainType.DeepFreshWater, "Deep Fresh Water");
english.terrain(TerrainType.ShallowFreshWater, "Shallow Fresh Water");
english.terrain(TerrainType.FreshWater, "Fresh Water");
english.terrain(TerrainType.RocksWithIron, "Rocks with Iron");
english.terrain(TerrainType.SandstoneWithIron, "Sandstone with Iron");
english.terrain(TerrainType.RocksWithTalc, "Rocks with Talc");
english.terrain(TerrainType.RocksWithLimestone, "Rocks with Limestone");
english.terrain(TerrainType.TreesWithBerries, "Trees with Berries");
english.terrain(TerrainType.TreesWithFungus, "Trees with Fungus");
english.terrain(TerrainType.TreesWithVines, "Trees with Vines");
english.terrain(TerrainType.PalmTreesWithCoconuts, "Palm Trees with Coconuts");
english.terrain(TerrainType.RocksWithCoal, "Rocks with Coal");
english.terrain(TerrainType.SandstoneWithNiter, "Sandstone with Niter");
english.terrain(TerrainType.ClayBrickFloor, "Clay Brick Floor");

// Events
english.tileEvent(TileEvent.Type.Fire, "Fire");

// On Equips
english.onEquipType(OnEquipType.LightSource, "Light Source");
english.onEquipType(OnEquipType.Telescopy, "Telescopy");

// Monsters
english.monster(MonsterType.Slime, "A Slime");
english.monster(MonsterType.JellyCube, "A Jelly Cube");
english.monster(MonsterType.GiantSpider, "A Giant Spider");
english.monster(MonsterType.Bear, "A Bear");
english.monster(MonsterType.Rabbit, "A Rabbit");
english.monster(MonsterType.Snake, "A Snake");
english.monster(MonsterType.GiantRat, "A Giant Rat");
english.monster(MonsterType.Rat, "A Rat");
english.monster(MonsterType.VampireBat, "A Vampire Bat");
english.monster(MonsterType.GreyWolf, "A Grey Wolf");
english.monster(MonsterType.Imp, "An Imp");
english.monster(MonsterType.Bogling, "A Bogling");
english.monster(MonsterType.LivingRock, "A Living Rock");
english.monster(MonsterType.Shark, "A Shark");
english.monster(MonsterType.Zombie, "A Zombie");
english.monster(MonsterType.Skeleton, "A Skeleton");
english.monster(MonsterType.PirateGhost, "A Pirate Ghost");
english.monster(MonsterType.TimeSkitter, "A Time Skitter");
english.monster(MonsterType.Chicken, "A Chicken");
english.monster(MonsterType.TrapdoorSpider, "A Trapdoor Spider");
english.monster(MonsterType.FireElemental, "A Fire Elemental");
english.monster(MonsterType.Cod, "A Cod");
english.monster(MonsterType.Hobgoblin, "A Hobgoblin");
english.monster(MonsterType.LivingMushroom, "A Living Mushroom");
english.monster(MonsterType.Kraken, "A Kraken");
english.monster(MonsterType.Blindfish, "A Blindfish");
english.monster(MonsterType.Harpy, "A Harpy");
english.monster(MonsterType.AcidSpitterDemon, "Acid Spitter Demon");
english.monster(MonsterType.SkeletalMage, "Skeletal Mage");

// Unique corpse types
english.monsterCorpse(MonsterType.FireElemental, "A Pile of Embers");
english.monsterCorpse(MonsterType.Blood, "Blood");

// Skills
english.skill(SkillType.Chemistry, "Chemistry", "Influences quality and success rate of crafted items using chemical mixtures.");
english.skill(SkillType.Anatomy, "Anatomy", "Increases accuracy of creature health information (via inspecting).<br />Decreases chance of bleeding.<br />Increases effectiveness of healing consumables.");
english.skill(SkillType.Archery, "Archery & Firearms", "Increases attack damage, accuracy and maximum range when using bows and firearms.");
english.skill(SkillType.Blacksmithing, "Blacksmithing", "Influences quality, repair, and success rate of crafted items using metal.");
english.skill(SkillType.Botany, "Botany", "Increases chance of planting a plant.<br />Increases effectiveness of eating plant-based consumables.<br />Decreases chance of trampling plants when stepping on them.");
english.skill(SkillType.Camping, "Camping", "Increases the amount of turns slept when using a Bedroll.<br />Increases chance of starting a fire.");
english.skill(SkillType.Cartography, "Cartography", "Increases chance to successfully read Tattered Maps.<br />Decreases obscurity when reading Tattered Maps.");
english.skill(SkillType.Claythrowing, "Clay Throwing", "Influences quality and success rate of crafted items using clay.");
english.skill(SkillType.Cooking, "Cooking", "Influences decay of cooked items.");
english.skill(SkillType.Fishing, "Fishing", "Increases chance to successfully catch a fish. Increases maximum range when using a Fishing Rod.<br />Increases the range in which you can gather underwater treasure from.");
english.skill(SkillType.Fletching, "Fletching & Rangedcraft", "Influences quality and repair rate of crafted arrows, bows, and slings.");
english.skill(SkillType.Glassblowing, "Glassblowing", "Influences quality and success rate of crafted items using glass.");
english.skill(SkillType.Leatherworking, "Leatherworking", "Influences quality, repair, and success rate of crafted items using leather.");
english.skill(SkillType.LockPicking, "Lock Picking", "Increases chance to successfully unlock a chest.");
english.skill(SkillType.Lumberjacking, "Lumberjacking", "Increases chance of resource dropping on trees.<br />Decreases chance of stamina reduction while Lumberjacking.");
english.skill(SkillType.Mining, "Mining", "Increases chance of resource dropping on rocks.<br />Decreases chance of stamina reduction while Mining.<br />Increases the range in which you can gather treasure from.");
english.skill(SkillType.Mycology, "Mycology", "Increases chance of planting a mushroom.<br />Increases effectiveness of eating mushroom consumables.<br />Decreases chance of trampling mushrooms when stepping on them.");
english.skill(SkillType.Parrying, "Parrying", "Increases your base defense value.<br />Increases chance to take less damage in combat.<br />Decreases chance of stamina reduction from being attacked.");
english.skill(SkillType.Stonecrafting, "Stonecrafting", "Influences quality, repair, and success rate of crafted items using stones and rocks.");
english.skill(SkillType.Swimming, "Swimming", "Increases speed in water travel.<br />Decreases chance of stamina reduction in water.");
english.skill(SkillType.Tactics, "Tactics", "Increases your base attack value.<br />Increases chance to hit targets in combat.<br />Decreases chance of stamina reduction while attacking.");
english.skill(SkillType.Tailoring, "Tailoring", "Influences quality, repair, and success rate of crafted items using cloth and material.");
english.skill(SkillType.Throwing, "Throwing", "Increases attack damage, accuracy, and maximum range when throwing or slinging an item.");
english.skill(SkillType.Tinkering, "Tinkering", "Influences quality, repair, and success rate of crafted items using miscellaneous resources and methods.");
english.skill(SkillType.Trapping, "Trapping", "Increases the amount of damage and success rate of trapping creatures.<br />Reduces chance of setting off traps and reduces damage taken from traps.");
english.skill(SkillType.Woodworking, "Woodworking", "Influences quality, repair, and success rate of crafted items using wood.");

// Milestones
english.milestone(MilestoneType.Abnormalizer, "Abnormalizer", "Killed 25 aberrant creatures.");
english.milestone(MilestoneType.Chef, "Chef", "Cooked 25 food items.");
english.milestone(MilestoneType.Crafter, "Crafter", "Crafted 250 items.");
english.milestone(MilestoneType.Extincteur, "Extincteur", "Killed 1000 creatures.");
english.milestone(MilestoneType.Gardener, "Gardener", "Planted 50 plants or mushrooms.");
english.milestone(MilestoneType.Gatherer, "Gatherer", "Gathered 1000 times.");
english.milestone(MilestoneType.Hunter, "Hunter", "Killed 100 creatures.");
english.milestone(MilestoneType.Locksmith, "Locksmith", "Lock picked 10 locks.");
english.milestone(MilestoneType.ReaperOfSouls, "Reaper of Souls", "Killed 50 ghosts and harvested their corpses.");
english.milestone(MilestoneType.Survivor, "Survivor", "Survived for 10000 turns.");
english.milestone(MilestoneType.Thrower, "Thrower", "Thrown 500 items.");
english.milestone(MilestoneType.Trapper, "Trapper", "Injured 10 creatures with traps.");
english.milestone(MilestoneType.TreasureHunter, "Treasure Hunter", "Dug or fished up 10 treasure chests.");
english.milestone(MilestoneType.Collector, "Collector", "Hold one of every item.");
english.milestone(MilestoneType.Explorer, "Explorer", "Step on or gather from every type of tile.");
english.milestone(MilestoneType.Grandmaster, "Grandmaster", "Get a skill to 100%.");
english.milestone(MilestoneType.Prepared, "Prepared", "Equip something in each equipment slot.");
english.milestone(MilestoneType.Doctor, "Doctor", "Cure each status effect.");

// Hints
english.hint(HintType.WelcomeToWayward, "Welcome to Wayward", "Welcome to the early access version of Wayward! Wayward is currently in beta status and many things will change and improve over time. Hint windows like these will display as you play the game if enabled. You can disable automatic hints by clicking the button \"Disable Hints\" below. If you need further help or hints, visit the <a target=\"_blank\" href=\"http://steamcommunity.com/app/379210/discussions/\">Steam Discussions</a>.<br /><br />If you want to keep up with Wayward, please visit the <a target=\"_blank\" href=\"http://www.unlok.ca/category/wayward/\">Wayward Blog</a>, <a target=\"_blank\" href=\"http://www.unlok.ca/forums/wayward-forum/\">Wayward Forums</a>, or <a target=\"_blank\" href=\"http://www.reddit.com/r/Wayward/\">Subreddit</a>.<br /><br />Want to help Wayward? Spread the word, or follow us on one of the following sites: <a target=\"_blank\" href=\"https://www.facebook.com/waywardgame\">Facebook</a>, <a target=\"_blank\" href=\"https://twitter.com/Wayward_Game\">Twitter</a>, or <a target=\"_blank\" href=\"http://www.indiedb.com/games/wayward\">IndieDB</a>.");
english.hint(HintType.Controls, "Controls", "The following text describes use of the default hotkeys and keybinds; however, they can all be changed in the options under \"Keybinds\" in the Options menu.<br /><br /><strong>Window Shortcuts</strong><br />Esc = Main Menu, I = Inventory, E = Equipment, C = Crafting, / = Help, X = Skills, M = Messages, O = Options, Q = Actions, Z = Milestones<br /><br /><strong>Movement</strong><br />To move, you can to use W, A, S, D or by clicking/tapping on the game screen in the direction you want to move. To skip/pass a turn, or to pick up item(s) on the tile you are standing on, press the spacebar or left click/tap your character on the game screen.<br /><br /><strong>Actions</strong><br />Opening up the actions menu will bring up a list of actions you can perform on the adjacent tile or object; for example, if you want to pick up a Pineapple without needing to carve it up. This is also an alternate way to inspect a tile without needing to right click on the game screen. Jumping is also selectable in the actions menu which can help you get out of tight spots, but watch out for the heavy stamina reduction, it's based on your current weight.<br /><br /><strong>Using Items</strong><br />To use an item, you may click/tap it to bring up the item menu to click on an action. Additionally, you are able to drag and drop an item into one of the quickslots. Press the number (1, 2, 3, etc.) that corresponds with which quickslot it is attached to perform the primary action for the item.<br /><br /><strong>Item Uses, Dropping and Information</strong><br />Some items have more than one use - these will show up in the items menu if available. You are able to right click an item to automatically drop it without going into the item menu. If you are facing a container, you will drop the item inside. You can use shift + right click (or use \"Drop All\" from the menu) to drop multiple items of the same kind. You are also able to right click on the game screen to reveal information about what you are clicking on (referred to as \"Inspect\"), whether it be items, monsters, tiles, and more.<br /><br /><strong>More Information</strong><br />Hovering over elements on screen will typically reveal more information. Tool-tips will appear over items. Hovering over crafting items will highlight items used in the craft (ordered by inventory/equipment/quickslot order).<br /><br /><strong>Item Management</strong><br />Besides dragging and dropping items to your quickslots, you are also able to equip items in this fashion, provided it is an equipment item and fits in that slot. Dragging and dropping is also used to move items your container window and inventory (besides right clicking to drop an item into a container on the ground). Additionally, right clicking an item in your equipment list, quickslots or container window will remove it from that slot.");
english.hint(HintType.CorpseCarving, "Corpse Carving", "To harvest potential resources from this corpse, try carving it with a sharp item. Choose \"Carve\" from the items menu or try equpping it to a quickslot for ease of use.");
english.hint(HintType.DoodadPickup, "Environmental Items/Objects", "To pick-up or gather from any environmental item/objects, such as plants or items attached to the ground like furnaces, campfires, etc you can do one of the following:<br />1. While facing the item, click or press the \"Actions\" hotkey, and select the \"Pick-up Object\" option.<br />2. Use an item with \"Digging\" such as a shovel.<br />3. Use an item with \"Carving\" such as a sharp rock. Using your bare hands with no tool (option 1) can sometimes harm you. Using a tool (option 2 and 3) will decrease the durability of the item. Some objects may require a \"Carving\" tool such as corpses to harvest from.");
english.hint(HintType.CaveDarkness, "Cave Darkness", "This would be the perfect place for hidden treasure, but first the area requires illumination with fire or a torch.");
english.hint(HintType.Nightfall, "Nightfall", "Nightfall approaches! Find a safe area to camp out, or prepare yourself for combat!");
english.hint(HintType.StaminaReplenishment, "Stamina Replenishment", "You are getting exhausted. Sleep or rest using a bedroll or hammock to regenerate stamina. You can also rest by going into the Actions menu and clicking Rest; however, resting with an item will produce better regenerative effects. Rest is different from sleep in that you will only ever rest until your stamina is maxed out. Alternatively, you may hold spacebar or click your character to skip turns.");
english.hint(HintType.HealthReplenishment, "Health Problems", "You are quite injured, replenish your health with food or healing-type items. Some status effects reduce your ability to regenerate your health including Bleeding and Poisoning. Alternatively, you can also try sleeping or resting to regenerate health.");
english.hint(HintType.Bleeding, "Bleeding", "You are bleeding! This status effect is usually the result of a poor Anatomy skill and fighting a tough creature. Make sure to use a healing item to stop the bleeding, such as a Bandage or Tourniquet. Bleeding causes you to starve and dehydrate faster, regenerate stamina slower and not regenerate any health.");
english.hint(HintType.Poisoned, "Poisoned", "You have been poisoned! Poisoning can happen from eating bad things or from some types of creatures. Make sure to use a curing item to cure the poison, such as a Charcoal Bandage or Medicinal Water. Poisoning causes you to dehydrate faster, slow stamina regeneration and not regenerate any health.");
english.hint(HintType.Dehydration, "Dehydration", "You are getting quite dehydrated. There's many ways to get drinkable water, but unfortunately for you, the largest source of water, from the sea is nearly undrinkable in it's raw form. You must desalinate the water through the use of a water still or flask before drinking it without adverse effects. Alternatively, you may seek out a fresh water source, such as from caves, small lakes, oases, swamps or ponds. Fresh water is drinkable in it's raw form without too many bad effects; however, you may still want to boil it for the best health results.");
english.hint(HintType.UseATool, "Use A Tool", "Gathering resources with your hands is difficult and harmful, try equipping or using a tool to eliminate the chance of injury. If you are Mining or Lumberjacking, your weapon(s) attack value will also help gather items faster. Blunt attack weapon will help you gather faster while Mining, while Slashing weapons will help you gather faster while lumberjacking.");
english.hint(HintType.Durability, "Durability", "One of your tools, weapons or armor is close to breaking from overuse. If you can't find or craft an item to repair it, you will have to replace it soon.");
english.hint(HintType.Death, "Death", "Death is permanent. Although you have died, all of the crafting recipes you have discovered will be ready on your next playthrough.");
english.hint(HintType.EatingBadThings, "Eating Bad Things", "Ow! Eating that has hurt you! Not all edible objects should be eaten, at least not without facing the consequences. On the other hand, sometimes it's worth the risk to gain other stats. Eating bad things can sometimes result in poisoning.");
english.hint(HintType.FastPickup, "Fast Pick-up", "You have just picked up an item from the ground. Sometimes there are multiple items on a tile. Pressing the spacebar or clicking on your character will gather items underneath you without moving.");
english.hint(HintType.Bugs, "BUGS!", "Did you find an error? Would you kindly let us know about what happened, so that we may seek to stop this from happening to other players? You can do so by posting the issue in <a target=\"_blank\" href=\"http://steamcommunity.com/app/379210/discussions/\">Steam Discussions</a>.");
english.hint(HintType.HeldItems, "Held Items", "Your left and right hand equipment slots are interchangeable. You can equip two weapons, two tools, two shields or any combination in between. Be careful of damaging useful equipment such as torches or shields while gathering or attacking. Make sure to always equip another weapon or tool in the other hand if you want to use it to attack or gather over damaging an equipped torch. You attack with both hands in combat, so it's important to equip both your hands if possible.");
english.hint(HintType.Milestones, "Milestones", "Milestones are personalized goals and achievements. Each playthrough, you are given an amount to either discover or work towards. Milestones are saved after each playthrough or death. The more you have completed, the more starting skill points you get and the more chance to get better starting items.");
english.hint(HintType.Burning, "Burning", "You have been burned! This lasting burning pain can be caused from stepping in an open flame without protection, or possibly other sources. Using a curing item such as a Charcoal Bandage or Medicinal Water will help soothe the pain. Alternatively, take a swim for a bit to remove the pain. Burning pain will stop you from regenerating health and can last quite awhile if untreated.");
english.hint(HintType.Crafting, "Crafting", "Crafting is simple, but has many rules!<br /><br />When hovering over an item in the crafting window, you will see which items will be used in the craft through a highlighted border that will appear around items in your inventory, quickslot or equipment windows (priority is set in that order). You will also notice that you will use the first instance of a required item. Simply drag around the order of items in your inventory to use different items in the craft.<br /><br />Using items in a craft that that have lower durability will affect the crafted item's durability. Items that have zero durability cannot be used in a craft. Additionally, using Remarkable, Exceptional or Legendary items in a craft increases your chances to craft such an item. Decayable items (such as food) also gain decay bonuses from using higher quality items in the craft.<br /><br />You can find new crafting recipes by: gathering the required items in your inventory and by finding Old Instructional Scrolls.");
english.hint(HintType.Encumbered, "Encumbered", "You are carrying quite a few items, enough to slow down your movement and reduce stamina regeneration. Pack on any more weight and you'll be fully overburdened and begin to take damage while trying to move. You can drop items from your inventory by right clicking.");
english.hint(HintType.DailyChallengeMode, "Daily Challenge Mode", "Daily Challenge Mode is an extra difficult game mode with some unique game rules to add an extra challenge for skilled players. You can expect more monsters, a harder beginning of the game, and more. You cannot save your game in this mode. The world and randomization is unique per day, allowing multiple players to play in the same set of circumstances.");
Languages.add(english);
